Terminals unused in grammar

   UMINUS


Grammar

    0 $accept: program "end of file"

    1 program: %empty
    2        | program function

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    4 identifier: IDENTIFIER

    5 declaration_loop: %empty
    6                 | declaration_loop declaration SEMICOLON

    7 statement_loop: statement SEMICOLON
    8               | statement_loop statement SEMICOLON

    9 declaration: identifier_loop COLON INTEGER
   10            | identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   12 identifier_loop: identifier
   13                | identifier_loop identifier COMMA

   14 statement: var ASSIGN expression
   15          | IF bool_expr THEN statement_loop ENDIF
   16          | IF bool_expr THEN statement_loop ELSE statement_loop ENDIF

   17 $@1: %empty

   18 statement: WHILE bool_expr BEGINLOOP $@1 statement_loop ENDLOOP

   19 $@2: %empty

   20 statement: DO BEGINLOOP $@2 statement_loop ENDLOOP WHILE bool_expr
   21          | READ var_loop
   22          | WRITE var_loop
   23          | CONTINUE
   24          | RETURN expression

   25 var_loop: var
   26         | var_loop COMMA var

   27 bool_expr: relation_and_expr
   28          | bool_expr OR relation_and_expr

   29 relation_and_expr: relation_expr
   30                  | relation_and_expr AND relation_expr

   31 relation_expr: expression comp expression
   32              | NOT expression comp expression
   33              | TRUE
   34              | NOT TRUE
   35              | FALSE
   36              | NOT FALSE
   37              | L_PAREN bool_expr R_PAREN

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE

   44 expression: mult_expr
   45           | expression ADD mult_expr
   46           | expression SUB mult_expr

   47 mult_expr: term
   48          | mult_expr mulop term

   49 mulop: MULT
   50      | DIV
   51      | MOD

   52 term: var
   53     | SUB var
   54     | NUMBER
   55     | SUB NUMBER
   56     | L_PAREN expression R_PAREN
   57     | SUB L_PAREN expression R_PAREN
   58     | IDENTIFIER L_PAREN R_PAREN
   59     | IDENTIFIER L_PAREN expression_loop R_PAREN

   60 expression_loop: expression
   61                | expression_loop COMMA expression

   62 var: IDENTIFIER
   63    | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
FUNCTION (258) 3
BEGIN_PARAMS (259) 3
END_PARAMS (260) 3
BEGIN_LOCALS (261) 3
END_LOCALS (262) 3
BEGIN_BODY (263) 3
END_BODY (264) 3
INTEGER (265) 9 10 11
ARRAY (266) 10 11
OF (267) 10 11
IF (268) 15 16
THEN (269) 15 16
ENDIF (270) 15 16
ELSE (271) 16
WHILE (272) 18 20
DO (273) 20
BEGINLOOP (274) 18 20
ENDLOOP (275) 18 20
CONTINUE (276) 23
READ (277) 21
WRITE (278) 22
AND (279) 30
OR (280) 28
NOT (281) 32 34 36
TRUE (282) 33 34
FALSE (283) 35 36
RETURN (284) 24
ADD (285) 45
SUB (286) 46 53 55 57
MULT (287) 49
DIV (288) 50
MOD (289) 51
EQ (290) 38
NEQ (291) 39
LT (292) 40
GT (293) 41
LTE (294) 42
GTE (295) 43
SEMICOLON (296) 3 6 7 8
COLON (297) 9 10 11
COMMA (298) 13 26 61
L_PAREN (299) 37 56 57 58 59
R_PAREN (300) 37 56 57 58 59
L_SQUARE_BRACKET (301) 10 11 63
R_SQUARE_BRACKET (302) 10 11 63
ASSIGN (303) 14
IDENTIFIER (304) 4 58 59 62 63
NUMBER (305) 10 11 54 55
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0 2
function (54)
    on left: 3, on right: 2
identifier (55)
    on left: 4, on right: 3 12 13
declaration_loop (56)
    on left: 5 6, on right: 3 6
statement_loop (57)
    on left: 7 8, on right: 3 8 15 16 18 20
declaration (58)
    on left: 9 10 11, on right: 6
identifier_loop (59)
    on left: 12 13, on right: 9 10 11 13
statement (60)
    on left: 14 15 16 18 20 21 22 23 24, on right: 7 8
$@1 (61)
    on left: 17, on right: 18
$@2 (62)
    on left: 19, on right: 20
var_loop (63)
    on left: 25 26, on right: 21 22 26
bool_expr (64)
    on left: 27 28, on right: 15 16 18 20 28 37
relation_and_expr (65)
    on left: 29 30, on right: 27 28 30
relation_expr (66)
    on left: 31 32 33 34 35 36 37, on right: 29 30
comp (67)
    on left: 38 39 40 41 42 43, on right: 31 32
expression (68)
    on left: 44 45 46, on right: 14 24 31 32 45 46 56 57 60 61 63
mult_expr (69)
    on left: 47 48, on right: 44 45 46 48
mulop (70)
    on left: 49 50 51, on right: 48
term (71)
    on left: 52 53 54 55 56 57 58 59, on right: 47 48
expression_loop (72)
    on left: 60 61, on right: 59 61
var (73)
    on left: 62 63, on right: 14 25 26 52 53


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . "end of file"
    2 program: program . function

    "end of file"  shift, and go to state 2
    FUNCTION       shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: program "end of file" .

    $default  accept


State 3

    3 function: FUNCTION . identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    IDENTIFIER  shift, and go to state 5

    identifier  go to state 6


State 4

    2 program: program function .

    $default  reduce using rule 2 (program)


State 5

    4 identifier: IDENTIFIER .

    $default  reduce using rule 4 (identifier)


State 6

    3 function: FUNCTION identifier . SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    SEMICOLON  shift, and go to state 7


State 7

    3 function: FUNCTION identifier SEMICOLON . BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 8

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS . declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    $default  reduce using rule 5 (declaration_loop)

    declaration_loop  go to state 9


State 9

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop . END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY
    6 declaration_loop: declaration_loop . declaration SEMICOLON

    END_PARAMS  shift, and go to state 10
    IDENTIFIER  shift, and go to state 5

    identifier       go to state 11
    declaration      go to state 12
    identifier_loop  go to state 13


State 10

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS . BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    BEGIN_LOCALS  shift, and go to state 14


State 11

   12 identifier_loop: identifier .

    $default  reduce using rule 12 (identifier_loop)


State 12

    6 declaration_loop: declaration_loop declaration . SEMICOLON

    SEMICOLON  shift, and go to state 15


State 13

    9 declaration: identifier_loop . COLON INTEGER
   10            | identifier_loop . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | identifier_loop . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13 identifier_loop: identifier_loop . identifier COMMA

    COLON       shift, and go to state 16
    IDENTIFIER  shift, and go to state 5

    identifier  go to state 17


State 14

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS . declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    $default  reduce using rule 5 (declaration_loop)

    declaration_loop  go to state 18


State 15

    6 declaration_loop: declaration_loop declaration SEMICOLON .

    $default  reduce using rule 6 (declaration_loop)


State 16

    9 declaration: identifier_loop COLON . INTEGER
   10            | identifier_loop COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | identifier_loop COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 19
    ARRAY    shift, and go to state 20


State 17

   13 identifier_loop: identifier_loop identifier . COMMA

    COMMA  shift, and go to state 21


State 18

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop . END_LOCALS BEGIN_BODY statement_loop END_BODY
    6 declaration_loop: declaration_loop . declaration SEMICOLON

    END_LOCALS  shift, and go to state 22
    IDENTIFIER  shift, and go to state 5

    identifier       go to state 11
    declaration      go to state 12
    identifier_loop  go to state 13


State 19

    9 declaration: identifier_loop COLON INTEGER .

    $default  reduce using rule 9 (declaration)


State 20

   10 declaration: identifier_loop COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | identifier_loop COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 23


State 21

   13 identifier_loop: identifier_loop identifier COMMA .

    $default  reduce using rule 13 (identifier_loop)


State 22

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS . BEGIN_BODY statement_loop END_BODY

    BEGIN_BODY  shift, and go to state 24


State 23

   10 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | identifier_loop COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 25


State 24

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY . statement_loop END_BODY

    IF          shift, and go to state 26
    WHILE       shift, and go to state 27
    DO          shift, and go to state 28
    CONTINUE    shift, and go to state 29
    READ        shift, and go to state 30
    WRITE       shift, and go to state 31
    RETURN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    statement_loop  go to state 34
    statement       go to state 35
    var             go to state 36


State 25

   10 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   11            | identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 37


State 26

   15 statement: IF . bool_expr THEN statement_loop ENDIF
   16          | IF . bool_expr THEN statement_loop ELSE statement_loop ENDIF

    NOT         shift, and go to state 38
    TRUE        shift, and go to state 39
    FALSE       shift, and go to state 40
    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    bool_expr          go to state 45
    relation_and_expr  go to state 46
    relation_expr      go to state 47
    expression         go to state 48
    mult_expr          go to state 49
    term               go to state 50
    var                go to state 51


State 27

   18 statement: WHILE . bool_expr BEGINLOOP $@1 statement_loop ENDLOOP

    NOT         shift, and go to state 38
    TRUE        shift, and go to state 39
    FALSE       shift, and go to state 40
    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    bool_expr          go to state 52
    relation_and_expr  go to state 46
    relation_expr      go to state 47
    expression         go to state 48
    mult_expr          go to state 49
    term               go to state 50
    var                go to state 51


State 28

   20 statement: DO . BEGINLOOP $@2 statement_loop ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 53


State 29

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 30

   21 statement: READ . var_loop

    IDENTIFIER  shift, and go to state 33

    var_loop  go to state 54
    var       go to state 55


State 31

   22 statement: WRITE . var_loop

    IDENTIFIER  shift, and go to state 33

    var_loop  go to state 56
    var       go to state 55


State 32

   24 statement: RETURN . expression

    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    expression  go to state 58
    mult_expr   go to state 49
    term        go to state 50
    var         go to state 51


State 33

   62 var: IDENTIFIER .
   63    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 59

    $default  reduce using rule 62 (var)


State 34

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop . END_BODY
    8 statement_loop: statement_loop . statement SEMICOLON

    END_BODY    shift, and go to state 60
    IF          shift, and go to state 26
    WHILE       shift, and go to state 27
    DO          shift, and go to state 28
    CONTINUE    shift, and go to state 29
    READ        shift, and go to state 30
    WRITE       shift, and go to state 31
    RETURN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    statement  go to state 61
    var        go to state 36


State 35

    7 statement_loop: statement . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 36

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 63


State 37

   10 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   11            | identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 64
    L_SQUARE_BRACKET  shift, and go to state 65


State 38

   32 relation_expr: NOT . expression comp expression
   34              | NOT . TRUE
   36              | NOT . FALSE

    TRUE        shift, and go to state 66
    FALSE       shift, and go to state 67
    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    expression  go to state 68
    mult_expr   go to state 49
    term        go to state 50
    var         go to state 51


State 39

   33 relation_expr: TRUE .

    $default  reduce using rule 33 (relation_expr)


State 40

   35 relation_expr: FALSE .

    $default  reduce using rule 35 (relation_expr)


State 41

   53 term: SUB . var
   55     | SUB . NUMBER
   57     | SUB . L_PAREN expression R_PAREN

    L_PAREN     shift, and go to state 69
    IDENTIFIER  shift, and go to state 33
    NUMBER      shift, and go to state 70

    var  go to state 71


State 42

   37 relation_expr: L_PAREN . bool_expr R_PAREN
   56 term: L_PAREN . expression R_PAREN

    NOT         shift, and go to state 38
    TRUE        shift, and go to state 39
    FALSE       shift, and go to state 40
    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    bool_expr          go to state 72
    relation_and_expr  go to state 46
    relation_expr      go to state 47
    expression         go to state 73
    mult_expr          go to state 49
    term               go to state 50
    var                go to state 51


State 43

   58 term: IDENTIFIER . L_PAREN R_PAREN
   59     | IDENTIFIER . L_PAREN expression_loop R_PAREN
   62 var: IDENTIFIER .
   63    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 74
    L_SQUARE_BRACKET  shift, and go to state 59

    $default  reduce using rule 62 (var)


State 44

   54 term: NUMBER .

    $default  reduce using rule 54 (term)


State 45

   15 statement: IF bool_expr . THEN statement_loop ENDIF
   16          | IF bool_expr . THEN statement_loop ELSE statement_loop ENDIF
   28 bool_expr: bool_expr . OR relation_and_expr

    THEN  shift, and go to state 75
    OR    shift, and go to state 76


State 46

   27 bool_expr: relation_and_expr .
   30 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 77

    $default  reduce using rule 27 (bool_expr)


State 47

   29 relation_and_expr: relation_expr .

    $default  reduce using rule 29 (relation_and_expr)


State 48

   31 relation_expr: expression . comp expression
   45 expression: expression . ADD mult_expr
   46           | expression . SUB mult_expr

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79
    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81
    LT   shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    GTE  shift, and go to state 85

    comp  go to state 86


State 49

   44 expression: mult_expr .
   48 mult_expr: mult_expr . mulop term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 44 (expression)

    mulop  go to state 90


State 50

   47 mult_expr: term .

    $default  reduce using rule 47 (mult_expr)


State 51

   52 term: var .

    $default  reduce using rule 52 (term)


State 52

   18 statement: WHILE bool_expr . BEGINLOOP $@1 statement_loop ENDLOOP
   28 bool_expr: bool_expr . OR relation_and_expr

    BEGINLOOP  shift, and go to state 91
    OR         shift, and go to state 76


State 53

   20 statement: DO BEGINLOOP . $@2 statement_loop ENDLOOP WHILE bool_expr

    $default  reduce using rule 19 ($@2)

    $@2  go to state 92


State 54

   21 statement: READ var_loop .
   26 var_loop: var_loop . COMMA var

    COMMA  shift, and go to state 93

    $default  reduce using rule 21 (statement)


State 55

   25 var_loop: var .

    $default  reduce using rule 25 (var_loop)


State 56

   22 statement: WRITE var_loop .
   26 var_loop: var_loop . COMMA var

    COMMA  shift, and go to state 93

    $default  reduce using rule 22 (statement)


State 57

   56 term: L_PAREN . expression R_PAREN

    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    expression  go to state 94
    mult_expr   go to state 49
    term        go to state 50
    var         go to state 51


State 58

   24 statement: RETURN expression .
   45 expression: expression . ADD mult_expr
   46           | expression . SUB mult_expr

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    $default  reduce using rule 24 (statement)


State 59

   63 var: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    expression  go to state 95
    mult_expr   go to state 49
    term        go to state 50
    var         go to state 51


State 60

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY .

    $default  reduce using rule 3 (function)


State 61

    8 statement_loop: statement_loop statement . SEMICOLON

    SEMICOLON  shift, and go to state 96


State 62

    7 statement_loop: statement SEMICOLON .

    $default  reduce using rule 7 (statement_loop)


State 63

   14 statement: var ASSIGN . expression

    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    expression  go to state 97
    mult_expr   go to state 49
    term        go to state 50
    var         go to state 51


State 64

   10 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 98


State 65

   11 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 99


State 66

   34 relation_expr: NOT TRUE .

    $default  reduce using rule 34 (relation_expr)


State 67

   36 relation_expr: NOT FALSE .

    $default  reduce using rule 36 (relation_expr)


State 68

   32 relation_expr: NOT expression . comp expression
   45 expression: expression . ADD mult_expr
   46           | expression . SUB mult_expr

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79
    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81
    LT   shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    GTE  shift, and go to state 85

    comp  go to state 100


State 69

   57 term: SUB L_PAREN . expression R_PAREN

    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    expression  go to state 101
    mult_expr   go to state 49
    term        go to state 50
    var         go to state 51


State 70

   55 term: SUB NUMBER .

    $default  reduce using rule 55 (term)


State 71

   53 term: SUB var .

    $default  reduce using rule 53 (term)


State 72

   28 bool_expr: bool_expr . OR relation_and_expr
   37 relation_expr: L_PAREN bool_expr . R_PAREN

    OR       shift, and go to state 76
    R_PAREN  shift, and go to state 102


State 73

   31 relation_expr: expression . comp expression
   45 expression: expression . ADD mult_expr
   46           | expression . SUB mult_expr
   56 term: L_PAREN expression . R_PAREN

    ADD      shift, and go to state 78
    SUB      shift, and go to state 79
    EQ       shift, and go to state 80
    NEQ      shift, and go to state 81
    LT       shift, and go to state 82
    GT       shift, and go to state 83
    LTE      shift, and go to state 84
    GTE      shift, and go to state 85
    R_PAREN  shift, and go to state 103

    comp  go to state 86


State 74

   58 term: IDENTIFIER L_PAREN . R_PAREN
   59     | IDENTIFIER L_PAREN . expression_loop R_PAREN

    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    R_PAREN     shift, and go to state 104
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    expression       go to state 105
    mult_expr        go to state 49
    term             go to state 50
    expression_loop  go to state 106
    var              go to state 51


State 75

   15 statement: IF bool_expr THEN . statement_loop ENDIF
   16          | IF bool_expr THEN . statement_loop ELSE statement_loop ENDIF

    IF          shift, and go to state 26
    WHILE       shift, and go to state 27
    DO          shift, and go to state 28
    CONTINUE    shift, and go to state 29
    READ        shift, and go to state 30
    WRITE       shift, and go to state 31
    RETURN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    statement_loop  go to state 107
    statement       go to state 35
    var             go to state 36


State 76

   28 bool_expr: bool_expr OR . relation_and_expr

    NOT         shift, and go to state 38
    TRUE        shift, and go to state 39
    FALSE       shift, and go to state 40
    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    relation_and_expr  go to state 108
    relation_expr      go to state 47
    expression         go to state 48
    mult_expr          go to state 49
    term               go to state 50
    var                go to state 51


State 77

   30 relation_and_expr: relation_and_expr AND . relation_expr

    NOT         shift, and go to state 38
    TRUE        shift, and go to state 39
    FALSE       shift, and go to state 40
    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    relation_expr  go to state 109
    expression     go to state 48
    mult_expr      go to state 49
    term           go to state 50
    var            go to state 51


State 78

   45 expression: expression ADD . mult_expr

    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    mult_expr  go to state 110
    term       go to state 50
    var        go to state 51


State 79

   46 expression: expression SUB . mult_expr

    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    mult_expr  go to state 111
    term       go to state 50
    var        go to state 51


State 80

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


State 81

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


State 82

   40 comp: LT .

    $default  reduce using rule 40 (comp)


State 83

   41 comp: GT .

    $default  reduce using rule 41 (comp)


State 84

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


State 85

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


State 86

   31 relation_expr: expression comp . expression

    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    expression  go to state 112
    mult_expr   go to state 49
    term        go to state 50
    var         go to state 51


State 87

   49 mulop: MULT .

    $default  reduce using rule 49 (mulop)


State 88

   50 mulop: DIV .

    $default  reduce using rule 50 (mulop)


State 89

   51 mulop: MOD .

    $default  reduce using rule 51 (mulop)


State 90

   48 mult_expr: mult_expr mulop . term

    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    term  go to state 113
    var   go to state 51


State 91

   18 statement: WHILE bool_expr BEGINLOOP . $@1 statement_loop ENDLOOP

    $default  reduce using rule 17 ($@1)

    $@1  go to state 114


State 92

   20 statement: DO BEGINLOOP $@2 . statement_loop ENDLOOP WHILE bool_expr

    IF          shift, and go to state 26
    WHILE       shift, and go to state 27
    DO          shift, and go to state 28
    CONTINUE    shift, and go to state 29
    READ        shift, and go to state 30
    WRITE       shift, and go to state 31
    RETURN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    statement_loop  go to state 115
    statement       go to state 35
    var             go to state 36


State 93

   26 var_loop: var_loop COMMA . var

    IDENTIFIER  shift, and go to state 33

    var  go to state 116


State 94

   45 expression: expression . ADD mult_expr
   46           | expression . SUB mult_expr
   56 term: L_PAREN expression . R_PAREN

    ADD      shift, and go to state 78
    SUB      shift, and go to state 79
    R_PAREN  shift, and go to state 103


State 95

   45 expression: expression . ADD mult_expr
   46           | expression . SUB mult_expr
   63 var: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    ADD               shift, and go to state 78
    SUB               shift, and go to state 79
    R_SQUARE_BRACKET  shift, and go to state 117


State 96

    8 statement_loop: statement_loop statement SEMICOLON .

    $default  reduce using rule 8 (statement_loop)


State 97

   14 statement: var ASSIGN expression .
   45 expression: expression . ADD mult_expr
   46           | expression . SUB mult_expr

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    $default  reduce using rule 14 (statement)


State 98

   10 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


State 99

   11 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 118


State 100

   32 relation_expr: NOT expression comp . expression

    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    expression  go to state 119
    mult_expr   go to state 49
    term        go to state 50
    var         go to state 51


State 101

   45 expression: expression . ADD mult_expr
   46           | expression . SUB mult_expr
   57 term: SUB L_PAREN expression . R_PAREN

    ADD      shift, and go to state 78
    SUB      shift, and go to state 79
    R_PAREN  shift, and go to state 120


State 102

   37 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 37 (relation_expr)


State 103

   56 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 56 (term)


State 104

   58 term: IDENTIFIER L_PAREN R_PAREN .

    $default  reduce using rule 58 (term)


State 105

   45 expression: expression . ADD mult_expr
   46           | expression . SUB mult_expr
   60 expression_loop: expression .

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    $default  reduce using rule 60 (expression_loop)


State 106

   59 term: IDENTIFIER L_PAREN expression_loop . R_PAREN
   61 expression_loop: expression_loop . COMMA expression

    COMMA    shift, and go to state 121
    R_PAREN  shift, and go to state 122


State 107

    8 statement_loop: statement_loop . statement SEMICOLON
   15 statement: IF bool_expr THEN statement_loop . ENDIF
   16          | IF bool_expr THEN statement_loop . ELSE statement_loop ENDIF

    IF          shift, and go to state 26
    ENDIF       shift, and go to state 123
    ELSE        shift, and go to state 124
    WHILE       shift, and go to state 27
    DO          shift, and go to state 28
    CONTINUE    shift, and go to state 29
    READ        shift, and go to state 30
    WRITE       shift, and go to state 31
    RETURN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    statement  go to state 61
    var        go to state 36


State 108

   28 bool_expr: bool_expr OR relation_and_expr .
   30 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 77

    $default  reduce using rule 28 (bool_expr)


State 109

   30 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 30 (relation_and_expr)


State 110

   45 expression: expression ADD mult_expr .
   48 mult_expr: mult_expr . mulop term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 45 (expression)

    mulop  go to state 90


State 111

   46 expression: expression SUB mult_expr .
   48 mult_expr: mult_expr . mulop term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 46 (expression)

    mulop  go to state 90


State 112

   31 relation_expr: expression comp expression .
   45 expression: expression . ADD mult_expr
   46           | expression . SUB mult_expr

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    $default  reduce using rule 31 (relation_expr)


State 113

   48 mult_expr: mult_expr mulop term .

    $default  reduce using rule 48 (mult_expr)


State 114

   18 statement: WHILE bool_expr BEGINLOOP $@1 . statement_loop ENDLOOP

    IF          shift, and go to state 26
    WHILE       shift, and go to state 27
    DO          shift, and go to state 28
    CONTINUE    shift, and go to state 29
    READ        shift, and go to state 30
    WRITE       shift, and go to state 31
    RETURN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    statement_loop  go to state 125
    statement       go to state 35
    var             go to state 36


State 115

    8 statement_loop: statement_loop . statement SEMICOLON
   20 statement: DO BEGINLOOP $@2 statement_loop . ENDLOOP WHILE bool_expr

    IF          shift, and go to state 26
    WHILE       shift, and go to state 27
    DO          shift, and go to state 28
    ENDLOOP     shift, and go to state 126
    CONTINUE    shift, and go to state 29
    READ        shift, and go to state 30
    WRITE       shift, and go to state 31
    RETURN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    statement  go to state 61
    var        go to state 36


State 116

   26 var_loop: var_loop COMMA var .

    $default  reduce using rule 26 (var_loop)


State 117

   63 var: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 63 (var)


State 118

   11 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 127


State 119

   32 relation_expr: NOT expression comp expression .
   45 expression: expression . ADD mult_expr
   46           | expression . SUB mult_expr

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    $default  reduce using rule 32 (relation_expr)


State 120

   57 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (term)


State 121

   61 expression_loop: expression_loop COMMA . expression

    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 57
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    expression  go to state 128
    mult_expr   go to state 49
    term        go to state 50
    var         go to state 51


State 122

   59 term: IDENTIFIER L_PAREN expression_loop R_PAREN .

    $default  reduce using rule 59 (term)


State 123

   15 statement: IF bool_expr THEN statement_loop ENDIF .

    $default  reduce using rule 15 (statement)


State 124

   16 statement: IF bool_expr THEN statement_loop ELSE . statement_loop ENDIF

    IF          shift, and go to state 26
    WHILE       shift, and go to state 27
    DO          shift, and go to state 28
    CONTINUE    shift, and go to state 29
    READ        shift, and go to state 30
    WRITE       shift, and go to state 31
    RETURN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    statement_loop  go to state 129
    statement       go to state 35
    var             go to state 36


State 125

    8 statement_loop: statement_loop . statement SEMICOLON
   18 statement: WHILE bool_expr BEGINLOOP $@1 statement_loop . ENDLOOP

    IF          shift, and go to state 26
    WHILE       shift, and go to state 27
    DO          shift, and go to state 28
    ENDLOOP     shift, and go to state 130
    CONTINUE    shift, and go to state 29
    READ        shift, and go to state 30
    WRITE       shift, and go to state 31
    RETURN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    statement  go to state 61
    var        go to state 36


State 126

   20 statement: DO BEGINLOOP $@2 statement_loop ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 131


State 127

   11 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 132


State 128

   45 expression: expression . ADD mult_expr
   46           | expression . SUB mult_expr
   61 expression_loop: expression_loop COMMA expression .

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    $default  reduce using rule 61 (expression_loop)


State 129

    8 statement_loop: statement_loop . statement SEMICOLON
   16 statement: IF bool_expr THEN statement_loop ELSE statement_loop . ENDIF

    IF          shift, and go to state 26
    ENDIF       shift, and go to state 133
    WHILE       shift, and go to state 27
    DO          shift, and go to state 28
    CONTINUE    shift, and go to state 29
    READ        shift, and go to state 30
    WRITE       shift, and go to state 31
    RETURN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33

    statement  go to state 61
    var        go to state 36


State 130

   18 statement: WHILE bool_expr BEGINLOOP $@1 statement_loop ENDLOOP .

    $default  reduce using rule 18 (statement)


State 131

   20 statement: DO BEGINLOOP $@2 statement_loop ENDLOOP WHILE . bool_expr

    NOT         shift, and go to state 38
    TRUE        shift, and go to state 39
    FALSE       shift, and go to state 40
    SUB         shift, and go to state 41
    L_PAREN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    NUMBER      shift, and go to state 44

    bool_expr          go to state 134
    relation_and_expr  go to state 46
    relation_expr      go to state 47
    expression         go to state 48
    mult_expr          go to state 49
    term               go to state 50
    var                go to state 51


State 132

   11 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 133

   16 statement: IF bool_expr THEN statement_loop ELSE statement_loop ENDIF .

    $default  reduce using rule 16 (statement)


State 134

   20 statement: DO BEGINLOOP $@2 statement_loop ENDLOOP WHILE bool_expr .
   28 bool_expr: bool_expr . OR relation_and_expr

    OR  shift, and go to state 76

    $default  reduce using rule 20 (statement)
