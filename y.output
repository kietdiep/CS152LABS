Grammar

    0 $accept: prog_start "end of file"

    1 $@1: %empty

    2 prog_start: $@1 program

    3 program: %empty
    4        | program function

    5 $@2: %empty

    6 function: FUNCTION IDENTIFIER $@2 SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    7 declaration_loop: %empty
    8                 | declaration_loop declaration SEMICOLON

    9 statement_loop: statement SEMICOLON
   10               | statement_loop statement SEMICOLON

   11 declaration: id_loop COLON INTEGER
   12            | id_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   13 id_loop: IDENTIFIER
   14        | id_loop COMMA IDENTIFIER

   15 statement: var ASSIGN expression
   16          | IF bool_expr THEN statement_loop ENDIF
   17          | IF bool_expr THEN statement_loop ELSE statement_loop ENDIF

   18 $@3: %empty

   19 statement: WHILE bool_expr BEGINLOOP $@3 statement_loop ENDLOOP

   20 $@4: %empty

   21 statement: DO BEGINLOOP $@4 statement_loop ENDLOOP WHILE bool_expr
   22          | READ var_loop
   23          | WRITE var_loop
   24          | CONTINUE
   25          | RETURN expression

   26 var_loop: var
   27         | var_loop COMMA var

   28 bool_expr: relation_and_expr
   29          | bool_expr OR relation_and_expr

   30 relation_and_expr: relation_expr
   31                  | relation_and_expr AND relation_expr

   32 relation_expr: expression comp expression
   33              | NOT expression comp expression
   34              | TRUE
   35              | NOT TRUE
   36              | FALSE
   37              | NOT FALSE
   38              | L_PAREN bool_expr R_PAREN

   39 comp: EQ
   40     | NEQ
   41     | LT
   42     | GT
   43     | LTE
   44     | GTE

   45 expression: mult_expr
   46           | expression ADD mult_expr
   47           | expression SUB mult_expr

   48 mult_expr: term
   49          | mult_expr mulop term

   50 mulop: MULT
   51      | DIV
   52      | MOD

   53 term: var
   54     | SUB var
   55     | NUMBER
   56     | SUB NUMBER
   57     | L_PAREN expression R_PAREN
   58     | SUB L_PAREN expression R_PAREN
   59     | IDENTIFIER L_PAREN R_PAREN
   60     | IDENTIFIER L_PAREN expression_loop R_PAREN

   61 expression_loop: expression
   62                | expression_loop COMMA expression

   63 var: IDENTIFIER
   64    | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
FUNCTION (258) 6
BEGINPARAMS (259) 6
ENDPARAMS (260) 6
BEGINLOCALS (261) 6
ENDLOCALS (262) 6
BEGINBODY (263) 6
ENDBODY (264) 6
INTEGER (265) 11 12
ARRAY (266) 12
OF (267) 12
IF (268) 16 17
THEN (269) 16 17
ENDIF (270) 16 17
ELSE (271) 17
WHILE (272) 19 21
DO (273) 21
BEGINLOOP (274) 19 21
ENDLOOP (275) 19 21
CONTINUE (276) 24
READ (277) 22
WRITE (278) 23
AND (279) 31
OR (280) 29
NOT (281) 33 35 37
TRUE (282) 34 35
FALSE (283) 36 37
RETURN (284) 25
ADD (285) 46
SUB (286) 47 54 56 58
MULT (287) 50
DIV (288) 51
MOD (289) 52
EQ (290) 39
NEQ (291) 40
LT (292) 41
GT (293) 42
LTE (294) 43
GTE (295) 44
SEMICOLON (296) 6 8 9 10
COLON (297) 11 12
COMMA (298) 14 27 62
L_PAREN (299) 38 57 58 59 60
R_PAREN (300) 38 57 58 59 60
L_SQUARE_BRACKET (301) 12 64
R_SQUARE_BRACKET (302) 12 64
ASSIGN (303) 15
IDENTIFIER (304) 6 13 14 59 60 63 64
NUMBER (305) 12 55 56


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
prog_start (52)
    on left: 2, on right: 0
$@1 (53)
    on left: 1, on right: 2
program (54)
    on left: 3 4, on right: 2 4
function (55)
    on left: 6, on right: 4
$@2 (56)
    on left: 5, on right: 6
declaration_loop (57)
    on left: 7 8, on right: 6 8
statement_loop (58)
    on left: 9 10, on right: 6 10 16 17 19 21
declaration (59)
    on left: 11 12, on right: 8
id_loop (60)
    on left: 13 14, on right: 11 12 14
statement (61)
    on left: 15 16 17 19 21 22 23 24 25, on right: 9 10
$@3 (62)
    on left: 18, on right: 19
$@4 (63)
    on left: 20, on right: 21
var_loop (64)
    on left: 26 27, on right: 22 23 27
bool_expr (65)
    on left: 28 29, on right: 16 17 19 21 29 38
relation_and_expr (66)
    on left: 30 31, on right: 28 29 31
relation_expr (67)
    on left: 32 33 34 35 36 37 38, on right: 30 31
comp (68)
    on left: 39 40 41 42 43 44, on right: 32 33
expression (69)
    on left: 45 46 47, on right: 15 25 32 33 46 47 57 58 61 62 64
mult_expr (70)
    on left: 48 49, on right: 45 46 47 49
mulop (71)
    on left: 50 51 52, on right: 49
term (72)
    on left: 53 54 55 56 57 58 59 60, on right: 48 49
expression_loop (73)
    on left: 61 62, on right: 60 62
var (74)
    on left: 63 64, on right: 15 26 27 53 54


State 0

    0 $accept: . prog_start "end of file"

    $default  reduce using rule 1 ($@1)

    prog_start  go to state 1
    $@1         go to state 2


State 1

    0 $accept: prog_start . "end of file"

    "end of file"  shift, and go to state 3


State 2

    2 prog_start: $@1 . program

    $default  reduce using rule 3 (program)

    program  go to state 4


State 3

    0 $accept: prog_start "end of file" .

    $default  accept


State 4

    2 prog_start: $@1 program .
    4 program: program . function

    FUNCTION  shift, and go to state 5

    $default  reduce using rule 2 (prog_start)

    function  go to state 6


State 5

    6 function: FUNCTION . IDENTIFIER $@2 SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    IDENTIFIER  shift, and go to state 7


State 6

    4 program: program function .

    $default  reduce using rule 4 (program)


State 7

    6 function: FUNCTION IDENTIFIER . $@2 SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    $default  reduce using rule 5 ($@2)

    $@2  go to state 8


State 8

    6 function: FUNCTION IDENTIFIER $@2 . SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    SEMICOLON  shift, and go to state 9


State 9

    6 function: FUNCTION IDENTIFIER $@2 SEMICOLON . BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    BEGINPARAMS  shift, and go to state 10


State 10

    6 function: FUNCTION IDENTIFIER $@2 SEMICOLON BEGINPARAMS . declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    $default  reduce using rule 7 (declaration_loop)

    declaration_loop  go to state 11


State 11

    6 function: FUNCTION IDENTIFIER $@2 SEMICOLON BEGINPARAMS declaration_loop . ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY
    8 declaration_loop: declaration_loop . declaration SEMICOLON

    ENDPARAMS   shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    declaration  go to state 14
    id_loop      go to state 15


State 12

    6 function: FUNCTION IDENTIFIER $@2 SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS . BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    BEGINLOCALS  shift, and go to state 16


State 13

   13 id_loop: IDENTIFIER .

    $default  reduce using rule 13 (id_loop)


State 14

    8 declaration_loop: declaration_loop declaration . SEMICOLON

    SEMICOLON  shift, and go to state 17


State 15

   11 declaration: id_loop . COLON INTEGER
   12            | id_loop . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   14 id_loop: id_loop . COMMA IDENTIFIER

    COLON  shift, and go to state 18
    COMMA  shift, and go to state 19


State 16

    6 function: FUNCTION IDENTIFIER $@2 SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS . declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    $default  reduce using rule 7 (declaration_loop)

    declaration_loop  go to state 20


State 17

    8 declaration_loop: declaration_loop declaration SEMICOLON .

    $default  reduce using rule 8 (declaration_loop)


State 18

   11 declaration: id_loop COLON . INTEGER
   12            | id_loop COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 19

   14 id_loop: id_loop COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 23


State 20

    6 function: FUNCTION IDENTIFIER $@2 SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop . ENDLOCALS BEGINBODY statement_loop ENDBODY
    8 declaration_loop: declaration_loop . declaration SEMICOLON

    ENDLOCALS   shift, and go to state 24
    IDENTIFIER  shift, and go to state 13

    declaration  go to state 14
    id_loop      go to state 15


State 21

   11 declaration: id_loop COLON INTEGER .

    $default  reduce using rule 11 (declaration)


State 22

   12 declaration: id_loop COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

   14 id_loop: id_loop COMMA IDENTIFIER .

    $default  reduce using rule 14 (id_loop)


State 24

    6 function: FUNCTION IDENTIFIER $@2 SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS . BEGINBODY statement_loop ENDBODY

    BEGINBODY  shift, and go to state 26


State 25

   12 declaration: id_loop COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    6 function: FUNCTION IDENTIFIER $@2 SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY . statement_loop ENDBODY

    IF          shift, and go to state 28
    WHILE       shift, and go to state 29
    DO          shift, and go to state 30
    CONTINUE    shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35

    statement_loop  go to state 36
    statement       go to state 37
    var             go to state 38


State 27

   12 declaration: id_loop COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 39


State 28

   16 statement: IF . bool_expr THEN statement_loop ENDIF
   17          | IF . bool_expr THEN statement_loop ELSE statement_loop ENDIF

    NOT         shift, and go to state 40
    TRUE        shift, and go to state 41
    FALSE       shift, and go to state 42
    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    bool_expr          go to state 47
    relation_and_expr  go to state 48
    relation_expr      go to state 49
    expression         go to state 50
    mult_expr          go to state 51
    term               go to state 52
    var                go to state 53


State 29

   19 statement: WHILE . bool_expr BEGINLOOP $@3 statement_loop ENDLOOP

    NOT         shift, and go to state 40
    TRUE        shift, and go to state 41
    FALSE       shift, and go to state 42
    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    bool_expr          go to state 54
    relation_and_expr  go to state 48
    relation_expr      go to state 49
    expression         go to state 50
    mult_expr          go to state 51
    term               go to state 52
    var                go to state 53


State 30

   21 statement: DO . BEGINLOOP $@4 statement_loop ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 55


State 31

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


State 32

   22 statement: READ . var_loop

    IDENTIFIER  shift, and go to state 35

    var_loop  go to state 56
    var       go to state 57


State 33

   23 statement: WRITE . var_loop

    IDENTIFIER  shift, and go to state 35

    var_loop  go to state 58
    var       go to state 57


State 34

   25 statement: RETURN . expression

    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    expression  go to state 60
    mult_expr   go to state 51
    term        go to state 52
    var         go to state 53


State 35

   63 var: IDENTIFIER .
   64    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 61

    $default  reduce using rule 63 (var)


State 36

    6 function: FUNCTION IDENTIFIER $@2 SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop . ENDBODY
   10 statement_loop: statement_loop . statement SEMICOLON

    ENDBODY     shift, and go to state 62
    IF          shift, and go to state 28
    WHILE       shift, and go to state 29
    DO          shift, and go to state 30
    CONTINUE    shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35

    statement  go to state 63
    var        go to state 38


State 37

    9 statement_loop: statement . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 38

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 65


State 39

   12 declaration: id_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 66


State 40

   33 relation_expr: NOT . expression comp expression
   35              | NOT . TRUE
   37              | NOT . FALSE

    TRUE        shift, and go to state 67
    FALSE       shift, and go to state 68
    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    expression  go to state 69
    mult_expr   go to state 51
    term        go to state 52
    var         go to state 53


State 41

   34 relation_expr: TRUE .

    $default  reduce using rule 34 (relation_expr)


State 42

   36 relation_expr: FALSE .

    $default  reduce using rule 36 (relation_expr)


State 43

   54 term: SUB . var
   56     | SUB . NUMBER
   58     | SUB . L_PAREN expression R_PAREN

    L_PAREN     shift, and go to state 70
    IDENTIFIER  shift, and go to state 35
    NUMBER      shift, and go to state 71

    var  go to state 72


State 44

   38 relation_expr: L_PAREN . bool_expr R_PAREN
   57 term: L_PAREN . expression R_PAREN

    NOT         shift, and go to state 40
    TRUE        shift, and go to state 41
    FALSE       shift, and go to state 42
    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    bool_expr          go to state 73
    relation_and_expr  go to state 48
    relation_expr      go to state 49
    expression         go to state 74
    mult_expr          go to state 51
    term               go to state 52
    var                go to state 53


State 45

   59 term: IDENTIFIER . L_PAREN R_PAREN
   60     | IDENTIFIER . L_PAREN expression_loop R_PAREN
   63 var: IDENTIFIER .
   64    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 75
    L_SQUARE_BRACKET  shift, and go to state 61

    $default  reduce using rule 63 (var)


State 46

   55 term: NUMBER .

    $default  reduce using rule 55 (term)


State 47

   16 statement: IF bool_expr . THEN statement_loop ENDIF
   17          | IF bool_expr . THEN statement_loop ELSE statement_loop ENDIF
   29 bool_expr: bool_expr . OR relation_and_expr

    THEN  shift, and go to state 76
    OR    shift, and go to state 77


State 48

   28 bool_expr: relation_and_expr .
   31 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 78

    $default  reduce using rule 28 (bool_expr)


State 49

   30 relation_and_expr: relation_expr .

    $default  reduce using rule 30 (relation_and_expr)


State 50

   32 relation_expr: expression . comp expression
   46 expression: expression . ADD mult_expr
   47           | expression . SUB mult_expr

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80
    EQ   shift, and go to state 81
    NEQ  shift, and go to state 82
    LT   shift, and go to state 83
    GT   shift, and go to state 84
    LTE  shift, and go to state 85
    GTE  shift, and go to state 86

    comp  go to state 87


State 51

   45 expression: mult_expr .
   49 mult_expr: mult_expr . mulop term

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 45 (expression)

    mulop  go to state 91


State 52

   48 mult_expr: term .

    $default  reduce using rule 48 (mult_expr)


State 53

   53 term: var .

    $default  reduce using rule 53 (term)


State 54

   19 statement: WHILE bool_expr . BEGINLOOP $@3 statement_loop ENDLOOP
   29 bool_expr: bool_expr . OR relation_and_expr

    BEGINLOOP  shift, and go to state 92
    OR         shift, and go to state 77


State 55

   21 statement: DO BEGINLOOP . $@4 statement_loop ENDLOOP WHILE bool_expr

    $default  reduce using rule 20 ($@4)

    $@4  go to state 93


State 56

   22 statement: READ var_loop .
   27 var_loop: var_loop . COMMA var

    COMMA  shift, and go to state 94

    $default  reduce using rule 22 (statement)


State 57

   26 var_loop: var .

    $default  reduce using rule 26 (var_loop)


State 58

   23 statement: WRITE var_loop .
   27 var_loop: var_loop . COMMA var

    COMMA  shift, and go to state 94

    $default  reduce using rule 23 (statement)


State 59

   57 term: L_PAREN . expression R_PAREN

    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    expression  go to state 95
    mult_expr   go to state 51
    term        go to state 52
    var         go to state 53


State 60

   25 statement: RETURN expression .
   46 expression: expression . ADD mult_expr
   47           | expression . SUB mult_expr

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 25 (statement)


State 61

   64 var: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    expression  go to state 96
    mult_expr   go to state 51
    term        go to state 52
    var         go to state 53


State 62

    6 function: FUNCTION IDENTIFIER $@2 SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY .

    $default  reduce using rule 6 (function)


State 63

   10 statement_loop: statement_loop statement . SEMICOLON

    SEMICOLON  shift, and go to state 97


State 64

    9 statement_loop: statement SEMICOLON .

    $default  reduce using rule 9 (statement_loop)


State 65

   15 statement: var ASSIGN . expression

    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    expression  go to state 98
    mult_expr   go to state 51
    term        go to state 52
    var         go to state 53


State 66

   12 declaration: id_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 99


State 67

   35 relation_expr: NOT TRUE .

    $default  reduce using rule 35 (relation_expr)


State 68

   37 relation_expr: NOT FALSE .

    $default  reduce using rule 37 (relation_expr)


State 69

   33 relation_expr: NOT expression . comp expression
   46 expression: expression . ADD mult_expr
   47           | expression . SUB mult_expr

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80
    EQ   shift, and go to state 81
    NEQ  shift, and go to state 82
    LT   shift, and go to state 83
    GT   shift, and go to state 84
    LTE  shift, and go to state 85
    GTE  shift, and go to state 86

    comp  go to state 100


State 70

   58 term: SUB L_PAREN . expression R_PAREN

    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    expression  go to state 101
    mult_expr   go to state 51
    term        go to state 52
    var         go to state 53


State 71

   56 term: SUB NUMBER .

    $default  reduce using rule 56 (term)


State 72

   54 term: SUB var .

    $default  reduce using rule 54 (term)


State 73

   29 bool_expr: bool_expr . OR relation_and_expr
   38 relation_expr: L_PAREN bool_expr . R_PAREN

    OR       shift, and go to state 77
    R_PAREN  shift, and go to state 102


State 74

   32 relation_expr: expression . comp expression
   46 expression: expression . ADD mult_expr
   47           | expression . SUB mult_expr
   57 term: L_PAREN expression . R_PAREN

    ADD      shift, and go to state 79
    SUB      shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    LT       shift, and go to state 83
    GT       shift, and go to state 84
    LTE      shift, and go to state 85
    GTE      shift, and go to state 86
    R_PAREN  shift, and go to state 103

    comp  go to state 87


State 75

   59 term: IDENTIFIER L_PAREN . R_PAREN
   60     | IDENTIFIER L_PAREN . expression_loop R_PAREN

    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    R_PAREN     shift, and go to state 104
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    expression       go to state 105
    mult_expr        go to state 51
    term             go to state 52
    expression_loop  go to state 106
    var              go to state 53


State 76

   16 statement: IF bool_expr THEN . statement_loop ENDIF
   17          | IF bool_expr THEN . statement_loop ELSE statement_loop ENDIF

    IF          shift, and go to state 28
    WHILE       shift, and go to state 29
    DO          shift, and go to state 30
    CONTINUE    shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35

    statement_loop  go to state 107
    statement       go to state 37
    var             go to state 38


State 77

   29 bool_expr: bool_expr OR . relation_and_expr

    NOT         shift, and go to state 40
    TRUE        shift, and go to state 41
    FALSE       shift, and go to state 42
    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    relation_and_expr  go to state 108
    relation_expr      go to state 49
    expression         go to state 50
    mult_expr          go to state 51
    term               go to state 52
    var                go to state 53


State 78

   31 relation_and_expr: relation_and_expr AND . relation_expr

    NOT         shift, and go to state 40
    TRUE        shift, and go to state 41
    FALSE       shift, and go to state 42
    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    relation_expr  go to state 109
    expression     go to state 50
    mult_expr      go to state 51
    term           go to state 52
    var            go to state 53


State 79

   46 expression: expression ADD . mult_expr

    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    mult_expr  go to state 110
    term       go to state 52
    var        go to state 53


State 80

   47 expression: expression SUB . mult_expr

    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    mult_expr  go to state 111
    term       go to state 52
    var        go to state 53


State 81

   39 comp: EQ .

    $default  reduce using rule 39 (comp)


State 82

   40 comp: NEQ .

    $default  reduce using rule 40 (comp)


State 83

   41 comp: LT .

    $default  reduce using rule 41 (comp)


State 84

   42 comp: GT .

    $default  reduce using rule 42 (comp)


State 85

   43 comp: LTE .

    $default  reduce using rule 43 (comp)


State 86

   44 comp: GTE .

    $default  reduce using rule 44 (comp)


State 87

   32 relation_expr: expression comp . expression

    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    expression  go to state 112
    mult_expr   go to state 51
    term        go to state 52
    var         go to state 53


State 88

   50 mulop: MULT .

    $default  reduce using rule 50 (mulop)


State 89

   51 mulop: DIV .

    $default  reduce using rule 51 (mulop)


State 90

   52 mulop: MOD .

    $default  reduce using rule 52 (mulop)


State 91

   49 mult_expr: mult_expr mulop . term

    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    term  go to state 113
    var   go to state 53


State 92

   19 statement: WHILE bool_expr BEGINLOOP . $@3 statement_loop ENDLOOP

    $default  reduce using rule 18 ($@3)

    $@3  go to state 114


State 93

   21 statement: DO BEGINLOOP $@4 . statement_loop ENDLOOP WHILE bool_expr

    IF          shift, and go to state 28
    WHILE       shift, and go to state 29
    DO          shift, and go to state 30
    CONTINUE    shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35

    statement_loop  go to state 115
    statement       go to state 37
    var             go to state 38


State 94

   27 var_loop: var_loop COMMA . var

    IDENTIFIER  shift, and go to state 35

    var  go to state 116


State 95

   46 expression: expression . ADD mult_expr
   47           | expression . SUB mult_expr
   57 term: L_PAREN expression . R_PAREN

    ADD      shift, and go to state 79
    SUB      shift, and go to state 80
    R_PAREN  shift, and go to state 103


State 96

   46 expression: expression . ADD mult_expr
   47           | expression . SUB mult_expr
   64 var: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    ADD               shift, and go to state 79
    SUB               shift, and go to state 80
    R_SQUARE_BRACKET  shift, and go to state 117


State 97

   10 statement_loop: statement_loop statement SEMICOLON .

    $default  reduce using rule 10 (statement_loop)


State 98

   15 statement: var ASSIGN expression .
   46 expression: expression . ADD mult_expr
   47           | expression . SUB mult_expr

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 15 (statement)


State 99

   12 declaration: id_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 100

   33 relation_expr: NOT expression comp . expression

    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    expression  go to state 118
    mult_expr   go to state 51
    term        go to state 52
    var         go to state 53


State 101

   46 expression: expression . ADD mult_expr
   47           | expression . SUB mult_expr
   58 term: SUB L_PAREN expression . R_PAREN

    ADD      shift, and go to state 79
    SUB      shift, and go to state 80
    R_PAREN  shift, and go to state 119


State 102

   38 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 38 (relation_expr)


State 103

   57 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (term)


State 104

   59 term: IDENTIFIER L_PAREN R_PAREN .

    $default  reduce using rule 59 (term)


State 105

   46 expression: expression . ADD mult_expr
   47           | expression . SUB mult_expr
   61 expression_loop: expression .

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 61 (expression_loop)


State 106

   60 term: IDENTIFIER L_PAREN expression_loop . R_PAREN
   62 expression_loop: expression_loop . COMMA expression

    COMMA    shift, and go to state 120
    R_PAREN  shift, and go to state 121


State 107

   10 statement_loop: statement_loop . statement SEMICOLON
   16 statement: IF bool_expr THEN statement_loop . ENDIF
   17          | IF bool_expr THEN statement_loop . ELSE statement_loop ENDIF

    IF          shift, and go to state 28
    ENDIF       shift, and go to state 122
    ELSE        shift, and go to state 123
    WHILE       shift, and go to state 29
    DO          shift, and go to state 30
    CONTINUE    shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35

    statement  go to state 63
    var        go to state 38


State 108

   29 bool_expr: bool_expr OR relation_and_expr .
   31 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 78

    $default  reduce using rule 29 (bool_expr)


State 109

   31 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 31 (relation_and_expr)


State 110

   46 expression: expression ADD mult_expr .
   49 mult_expr: mult_expr . mulop term

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 46 (expression)

    mulop  go to state 91


State 111

   47 expression: expression SUB mult_expr .
   49 mult_expr: mult_expr . mulop term

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 47 (expression)

    mulop  go to state 91


State 112

   32 relation_expr: expression comp expression .
   46 expression: expression . ADD mult_expr
   47           | expression . SUB mult_expr

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 32 (relation_expr)


State 113

   49 mult_expr: mult_expr mulop term .

    $default  reduce using rule 49 (mult_expr)


State 114

   19 statement: WHILE bool_expr BEGINLOOP $@3 . statement_loop ENDLOOP

    IF          shift, and go to state 28
    WHILE       shift, and go to state 29
    DO          shift, and go to state 30
    CONTINUE    shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35

    statement_loop  go to state 124
    statement       go to state 37
    var             go to state 38


State 115

   10 statement_loop: statement_loop . statement SEMICOLON
   21 statement: DO BEGINLOOP $@4 statement_loop . ENDLOOP WHILE bool_expr

    IF          shift, and go to state 28
    WHILE       shift, and go to state 29
    DO          shift, and go to state 30
    ENDLOOP     shift, and go to state 125
    CONTINUE    shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35

    statement  go to state 63
    var        go to state 38


State 116

   27 var_loop: var_loop COMMA var .

    $default  reduce using rule 27 (var_loop)


State 117

   64 var: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 64 (var)


State 118

   33 relation_expr: NOT expression comp expression .
   46 expression: expression . ADD mult_expr
   47           | expression . SUB mult_expr

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 33 (relation_expr)


State 119

   58 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term)


State 120

   62 expression_loop: expression_loop COMMA . expression

    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 59
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    expression  go to state 126
    mult_expr   go to state 51
    term        go to state 52
    var         go to state 53


State 121

   60 term: IDENTIFIER L_PAREN expression_loop R_PAREN .

    $default  reduce using rule 60 (term)


State 122

   16 statement: IF bool_expr THEN statement_loop ENDIF .

    $default  reduce using rule 16 (statement)


State 123

   17 statement: IF bool_expr THEN statement_loop ELSE . statement_loop ENDIF

    IF          shift, and go to state 28
    WHILE       shift, and go to state 29
    DO          shift, and go to state 30
    CONTINUE    shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35

    statement_loop  go to state 127
    statement       go to state 37
    var             go to state 38


State 124

   10 statement_loop: statement_loop . statement SEMICOLON
   19 statement: WHILE bool_expr BEGINLOOP $@3 statement_loop . ENDLOOP

    IF          shift, and go to state 28
    WHILE       shift, and go to state 29
    DO          shift, and go to state 30
    ENDLOOP     shift, and go to state 128
    CONTINUE    shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35

    statement  go to state 63
    var        go to state 38


State 125

   21 statement: DO BEGINLOOP $@4 statement_loop ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 129


State 126

   46 expression: expression . ADD mult_expr
   47           | expression . SUB mult_expr
   62 expression_loop: expression_loop COMMA expression .

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 62 (expression_loop)


State 127

   10 statement_loop: statement_loop . statement SEMICOLON
   17 statement: IF bool_expr THEN statement_loop ELSE statement_loop . ENDIF

    IF          shift, and go to state 28
    ENDIF       shift, and go to state 130
    WHILE       shift, and go to state 29
    DO          shift, and go to state 30
    CONTINUE    shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35

    statement  go to state 63
    var        go to state 38


State 128

   19 statement: WHILE bool_expr BEGINLOOP $@3 statement_loop ENDLOOP .

    $default  reduce using rule 19 (statement)


State 129

   21 statement: DO BEGINLOOP $@4 statement_loop ENDLOOP WHILE . bool_expr

    NOT         shift, and go to state 40
    TRUE        shift, and go to state 41
    FALSE       shift, and go to state 42
    SUB         shift, and go to state 43
    L_PAREN     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 46

    bool_expr          go to state 131
    relation_and_expr  go to state 48
    relation_expr      go to state 49
    expression         go to state 50
    mult_expr          go to state 51
    term               go to state 52
    var                go to state 53


State 130

   17 statement: IF bool_expr THEN statement_loop ELSE statement_loop ENDIF .

    $default  reduce using rule 17 (statement)


State 131

   21 statement: DO BEGINLOOP $@4 statement_loop ENDLOOP WHILE bool_expr .
   29 bool_expr: bool_expr . OR relation_and_expr

    OR  shift, and go to state 77

    $default  reduce using rule 21 (statement)
