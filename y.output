Terminals unused in grammar

   IDENTIFIER
   EXIT
   ELSEIF
   MULT
   DIV
   MOD


Rules useless in parser due to conflicts

   54 mult_mult_loop: %empty

   55 div_mult_loop: %empty

   56 mod_mult_loop: %empty


State 46 conflicts: 16 reduce/reduce


Grammar

    0 $accept: program "end of file"

    1 program: %empty
    2        | program function

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    4 identifier: IDENT

    5 number: NUMBER

    6 declaration_loop: %empty
    7                 | declaration_loop declaration SEMICOLON

    8 statement_loop: statement SEMICOLON
    9               | statement_loop statement SEMICOLON

   10 declaration: identifier_loop COLON INTEGER
   11            | identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

   13 identifier_loop: identifier
   14                | identifier_loop identifier COMMA

   15 statement: var ASSIGN expression
   16          | IF bool_exp THEN statement_loop ENDIF
   17          | IF bool_exp THEN statement_loop ELSE statement_loop ENDIF
   18          | WHILE bool_exp BEGINLOOP statement_loop ENDLOOP
   19          | DO BEGINLOOP statement_loop ENDLOOP WHILE bool_exp
   20          | FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   21          | READ var_loop
   22          | WRITE var_loop
   23          | CONTINUE
   24          | RETURN expression

   25 var_loop: var
   26         | var_loop var COMMA

   27 bool_exp: relation_and_exp
   28         | relation_and_exp OR bool_exp

   29 relation_and_exp: relation_exp
   30                 | relation_exp AND relation_and_exp

   31 relation_exp: NOT expression comp expression
   32             | expression comp expression
   33             | NOT TRUE
   34             | TRUE
   35             | NOT FALSE
   36             | FALSE
   37             | NOT L_PAREN bool_exp R_PAREN
   38             | L_PAREN bool_exp R_PAREN

   39 comp: EQ
   40     | NEQ
   41     | LT
   42     | GT
   43     | LTE
   44     | GTE

   45 expression: mult_exp
   46           | mult_exp add_mult_loop
   47           | mult_exp sub_mult_loop

   48 add_mult_loop: ADD expression

   49 sub_mult_loop: SUB expression

   50 mult_exp: term
   51         | term mult_mult_loop
   52         | term div_mult_loop
   53         | term mod_mult_loop

   54 mult_mult_loop: %empty

   55 div_mult_loop: %empty

   56 mod_mult_loop: %empty

   57 term: identifier L_PAREN exp_loop R_PAREN
   58     | SUB var
   59     | var
   60     | SUB number
   61     | number
   62     | SUB L_PAREN expression R_PAREN
   63     | L_PAREN expression R_PAREN

   64 exp_loop: %empty
   65         | exp_loop expression COMMA

   66 var: identifier
   67    | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   68    | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
FUNCTION (258) 3
IDENTIFIER (259)
BEGIN_PARAMS (260) 3
END_PARAMS (261) 3
INTEGER (262) 10 11 12
ARRAY (263) 11 12
OF (264) 11 12
BEGIN_LOCALS (265) 3
END_LOCALS (266) 3
BEGIN_BODY (267) 3
END_BODY (268) 3
RETURN (269) 24
BEGINLOOP (270) 18 19 20
ENDLOOP (271) 18 19 20
CONTINUE (272) 23
EXIT (273)
READ (274) 21
WRITE (275) 22
OR (276) 28
AND (277) 30
NOT (278) 31 33 35 37
TRUE (279) 33 34
FALSE (280) 35 36
FOR (281) 20
DO (282) 19
IF (283) 16 17
THEN (284) 16 17
ENDIF (285) 16 17
ELSEIF (286)
ELSE (287) 17
WHILE (288) 18 19
SUB (289) 49 58 60 62
ADD (290) 48
MULT (291)
DIV (292)
MOD (293)
EQ (294) 39
NEQ (295) 40
LT (296) 41
GT (297) 42
LTE (298) 43
GTE (299) 44
L_PAREN (300) 37 38 57 62 63
R_PAREN (301) 37 38 57 62 63
COMMA (302) 14 26 65
SEMICOLON (303) 3 7 8 9 20
COLON (304) 10 11 12
L_SQUARE_BRACKET (305) 11 12 67 68
R_SQUARE_BRACKET (306) 11 12 67 68
ASSIGN (307) 15 20
NUMBER (308) 5
IDENT (309) 4


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1 2, on right: 0 2
function (57)
    on left: 3, on right: 2
identifier (58)
    on left: 4, on right: 3 13 14 57 66 67 68
number (59)
    on left: 5, on right: 11 12 20 60 61
declaration_loop (60)
    on left: 6 7, on right: 3 7
statement_loop (61)
    on left: 8 9, on right: 3 9 16 17 18 19 20
declaration (62)
    on left: 10 11 12, on right: 7
identifier_loop (63)
    on left: 13 14, on right: 10 11 12 14
statement (64)
    on left: 15 16 17 18 19 20 21 22 23 24, on right: 8 9
var_loop (65)
    on left: 25 26, on right: 21 22 26
bool_exp (66)
    on left: 27 28, on right: 16 17 18 19 20 28 37 38
relation_and_exp (67)
    on left: 29 30, on right: 27 28 30
relation_exp (68)
    on left: 31 32 33 34 35 36 37 38, on right: 29 30
comp (69)
    on left: 39 40 41 42 43 44, on right: 31 32
expression (70)
    on left: 45 46 47, on right: 15 20 24 31 32 48 49 62 63 65 67 68
add_mult_loop (71)
    on left: 48, on right: 46
sub_mult_loop (72)
    on left: 49, on right: 47
mult_exp (73)
    on left: 50 51 52 53, on right: 45 46 47
mult_mult_loop (74)
    on left: 54, on right: 51
div_mult_loop (75)
    on left: 55, on right: 52
mod_mult_loop (76)
    on left: 56, on right: 53
term (77)
    on left: 57 58 59 60 61 62 63, on right: 50 51 52 53
exp_loop (78)
    on left: 64 65, on right: 57 65
var (79)
    on left: 66 67 68, on right: 15 20 25 26 58 59


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . "end of file"
    2 program: program . function

    "end of file"  shift, and go to state 2
    FUNCTION       shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: program "end of file" .

    $default  accept


State 3

    3 function: FUNCTION . identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    IDENT  shift, and go to state 5

    identifier  go to state 6


State 4

    2 program: program function .

    $default  reduce using rule 2 (program)


State 5

    4 identifier: IDENT .

    $default  reduce using rule 4 (identifier)


State 6

    3 function: FUNCTION identifier . SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    SEMICOLON  shift, and go to state 7


State 7

    3 function: FUNCTION identifier SEMICOLON . BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 8

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS . declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    $default  reduce using rule 6 (declaration_loop)

    declaration_loop  go to state 9


State 9

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop . END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY
    7 declaration_loop: declaration_loop . declaration SEMICOLON

    END_PARAMS  shift, and go to state 10
    IDENT       shift, and go to state 5

    identifier       go to state 11
    declaration      go to state 12
    identifier_loop  go to state 13


State 10

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS . BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    BEGIN_LOCALS  shift, and go to state 14


State 11

   13 identifier_loop: identifier .

    $default  reduce using rule 13 (identifier_loop)


State 12

    7 declaration_loop: declaration_loop declaration . SEMICOLON

    SEMICOLON  shift, and go to state 15


State 13

   10 declaration: identifier_loop . COLON INTEGER
   11            | identifier_loop . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifier_loop . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   14 identifier_loop: identifier_loop . identifier COMMA

    COLON  shift, and go to state 16
    IDENT  shift, and go to state 5

    identifier  go to state 17


State 14

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS . declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    $default  reduce using rule 6 (declaration_loop)

    declaration_loop  go to state 18


State 15

    7 declaration_loop: declaration_loop declaration SEMICOLON .

    $default  reduce using rule 7 (declaration_loop)


State 16

   10 declaration: identifier_loop COLON . INTEGER
   11            | identifier_loop COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifier_loop COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 19
    ARRAY    shift, and go to state 20


State 17

   14 identifier_loop: identifier_loop identifier . COMMA

    COMMA  shift, and go to state 21


State 18

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop . END_LOCALS BEGIN_BODY statement_loop END_BODY
    7 declaration_loop: declaration_loop . declaration SEMICOLON

    END_LOCALS  shift, and go to state 22
    IDENT       shift, and go to state 5

    identifier       go to state 11
    declaration      go to state 12
    identifier_loop  go to state 13


State 19

   10 declaration: identifier_loop COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 20

   11 declaration: identifier_loop COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifier_loop COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 23


State 21

   14 identifier_loop: identifier_loop identifier COMMA .

    $default  reduce using rule 14 (identifier_loop)


State 22

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS . BEGIN_BODY statement_loop END_BODY

    BEGIN_BODY  shift, and go to state 24


State 23

   11 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER
   12            | identifier_loop COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 25

    number  go to state 26


State 24

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY . statement_loop END_BODY

    RETURN    shift, and go to state 27
    CONTINUE  shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    IDENT     shift, and go to state 5

    identifier      go to state 35
    statement_loop  go to state 36
    statement       go to state 37
    var             go to state 38


State 25

    5 number: NUMBER .

    $default  reduce using rule 5 (number)


State 26

   11 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER
   12            | identifier_loop COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 39


State 27

   24 statement: RETURN . expression

    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 44
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 28

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 29

   21 statement: READ . var_loop

    IDENT  shift, and go to state 5

    identifier  go to state 35
    var_loop    go to state 48
    var         go to state 49


State 30

   22 statement: WRITE . var_loop

    IDENT  shift, and go to state 5

    identifier  go to state 35
    var_loop    go to state 50
    var         go to state 49


State 31

   20 statement: FOR . var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    IDENT  shift, and go to state 5

    identifier  go to state 35
    var         go to state 51


State 32

   19 statement: DO . BEGINLOOP statement_loop ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 52


State 33

   16 statement: IF . bool_exp THEN statement_loop ENDIF
   17          | IF . bool_exp THEN statement_loop ELSE statement_loop ENDIF

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier        go to state 42
    number            go to state 43
    bool_exp          go to state 57
    relation_and_exp  go to state 58
    relation_exp      go to state 59
    expression        go to state 60
    mult_exp          go to state 45
    term              go to state 46
    var               go to state 47


State 34

   18 statement: WHILE . bool_exp BEGINLOOP statement_loop ENDLOOP

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier        go to state 42
    number            go to state 43
    bool_exp          go to state 61
    relation_and_exp  go to state 58
    relation_exp      go to state 59
    expression        go to state 60
    mult_exp          go to state 45
    term              go to state 46
    var               go to state 47


State 35

   66 var: identifier .
   67    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   68    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 62

    $default  reduce using rule 66 (var)


State 36

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop . END_BODY
    9 statement_loop: statement_loop . statement SEMICOLON

    END_BODY  shift, and go to state 63
    RETURN    shift, and go to state 27
    CONTINUE  shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    IDENT     shift, and go to state 5

    identifier  go to state 35
    statement   go to state 64
    var         go to state 38


State 37

    8 statement_loop: statement . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 38

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 66


State 39

   11 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER
   12            | identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 67
    L_SQUARE_BRACKET  shift, and go to state 68


State 40

   58 term: SUB . var
   60     | SUB . number
   62     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 35
    number      go to state 70
    var         go to state 71


State 41

   63 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 72
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 42

   57 term: identifier . L_PAREN exp_loop R_PAREN
   66 var: identifier .
   67    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   68    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 73
    L_SQUARE_BRACKET  shift, and go to state 62

    $default  reduce using rule 66 (var)


State 43

   61 term: number .

    $default  reduce using rule 61 (term)


State 44

   24 statement: RETURN expression .

    $default  reduce using rule 24 (statement)


State 45

   45 expression: mult_exp .
   46           | mult_exp . add_mult_loop
   47           | mult_exp . sub_mult_loop

    SUB  shift, and go to state 74
    ADD  shift, and go to state 75

    $default  reduce using rule 45 (expression)

    add_mult_loop  go to state 76
    sub_mult_loop  go to state 77


State 46

   50 mult_exp: term .
   51         | term . mult_mult_loop
   52         | term . div_mult_loop
   53         | term . mod_mult_loop

    BEGINLOOP         reduce using rule 50 (mult_exp)
    BEGINLOOP         [reduce using rule 54 (mult_mult_loop)]
    BEGINLOOP         [reduce using rule 55 (div_mult_loop)]
    BEGINLOOP         [reduce using rule 56 (mod_mult_loop)]
    OR                reduce using rule 50 (mult_exp)
    OR                [reduce using rule 54 (mult_mult_loop)]
    OR                [reduce using rule 55 (div_mult_loop)]
    OR                [reduce using rule 56 (mod_mult_loop)]
    AND               reduce using rule 50 (mult_exp)
    AND               [reduce using rule 54 (mult_mult_loop)]
    AND               [reduce using rule 55 (div_mult_loop)]
    AND               [reduce using rule 56 (mod_mult_loop)]
    THEN              reduce using rule 50 (mult_exp)
    THEN              [reduce using rule 54 (mult_mult_loop)]
    THEN              [reduce using rule 55 (div_mult_loop)]
    THEN              [reduce using rule 56 (mod_mult_loop)]
    SUB               reduce using rule 50 (mult_exp)
    SUB               [reduce using rule 54 (mult_mult_loop)]
    SUB               [reduce using rule 55 (div_mult_loop)]
    SUB               [reduce using rule 56 (mod_mult_loop)]
    ADD               reduce using rule 50 (mult_exp)
    ADD               [reduce using rule 54 (mult_mult_loop)]
    ADD               [reduce using rule 55 (div_mult_loop)]
    ADD               [reduce using rule 56 (mod_mult_loop)]
    EQ                reduce using rule 50 (mult_exp)
    EQ                [reduce using rule 54 (mult_mult_loop)]
    EQ                [reduce using rule 55 (div_mult_loop)]
    EQ                [reduce using rule 56 (mod_mult_loop)]
    NEQ               reduce using rule 50 (mult_exp)
    NEQ               [reduce using rule 54 (mult_mult_loop)]
    NEQ               [reduce using rule 55 (div_mult_loop)]
    NEQ               [reduce using rule 56 (mod_mult_loop)]
    LT                reduce using rule 50 (mult_exp)
    LT                [reduce using rule 54 (mult_mult_loop)]
    LT                [reduce using rule 55 (div_mult_loop)]
    LT                [reduce using rule 56 (mod_mult_loop)]
    GT                reduce using rule 50 (mult_exp)
    GT                [reduce using rule 54 (mult_mult_loop)]
    GT                [reduce using rule 55 (div_mult_loop)]
    GT                [reduce using rule 56 (mod_mult_loop)]
    LTE               reduce using rule 50 (mult_exp)
    LTE               [reduce using rule 54 (mult_mult_loop)]
    LTE               [reduce using rule 55 (div_mult_loop)]
    LTE               [reduce using rule 56 (mod_mult_loop)]
    GTE               reduce using rule 50 (mult_exp)
    GTE               [reduce using rule 54 (mult_mult_loop)]
    GTE               [reduce using rule 55 (div_mult_loop)]
    GTE               [reduce using rule 56 (mod_mult_loop)]
    R_PAREN           reduce using rule 50 (mult_exp)
    R_PAREN           [reduce using rule 54 (mult_mult_loop)]
    R_PAREN           [reduce using rule 55 (div_mult_loop)]
    R_PAREN           [reduce using rule 56 (mod_mult_loop)]
    COMMA             reduce using rule 50 (mult_exp)
    COMMA             [reduce using rule 54 (mult_mult_loop)]
    COMMA             [reduce using rule 55 (div_mult_loop)]
    COMMA             [reduce using rule 56 (mod_mult_loop)]
    SEMICOLON         reduce using rule 50 (mult_exp)
    SEMICOLON         [reduce using rule 54 (mult_mult_loop)]
    SEMICOLON         [reduce using rule 55 (div_mult_loop)]
    SEMICOLON         [reduce using rule 56 (mod_mult_loop)]
    R_SQUARE_BRACKET  reduce using rule 50 (mult_exp)
    R_SQUARE_BRACKET  [reduce using rule 54 (mult_mult_loop)]
    R_SQUARE_BRACKET  [reduce using rule 55 (div_mult_loop)]
    R_SQUARE_BRACKET  [reduce using rule 56 (mod_mult_loop)]
    $default          reduce using rule 50 (mult_exp)

    mult_mult_loop  go to state 78
    div_mult_loop   go to state 79
    mod_mult_loop   go to state 80


State 47

   59 term: var .

    $default  reduce using rule 59 (term)


State 48

   21 statement: READ var_loop .
   26 var_loop: var_loop . var COMMA

    IDENT  shift, and go to state 5

    $default  reduce using rule 21 (statement)

    identifier  go to state 35
    var         go to state 81


State 49

   25 var_loop: var .

    $default  reduce using rule 25 (var_loop)


State 50

   22 statement: WRITE var_loop .
   26 var_loop: var_loop . var COMMA

    IDENT  shift, and go to state 5

    $default  reduce using rule 22 (statement)

    identifier  go to state 35
    var         go to state 81


State 51

   20 statement: FOR var . ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    ASSIGN  shift, and go to state 82


State 52

   19 statement: DO BEGINLOOP . statement_loop ENDLOOP WHILE bool_exp

    RETURN    shift, and go to state 27
    CONTINUE  shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    IDENT     shift, and go to state 5

    identifier      go to state 35
    statement_loop  go to state 83
    statement       go to state 37
    var             go to state 38


State 53

   31 relation_exp: NOT . expression comp expression
   33             | NOT . TRUE
   35             | NOT . FALSE
   37             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 84
    FALSE    shift, and go to state 85
    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 87
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 54

   34 relation_exp: TRUE .

    $default  reduce using rule 34 (relation_exp)


State 55

   36 relation_exp: FALSE .

    $default  reduce using rule 36 (relation_exp)


State 56

   38 relation_exp: L_PAREN . bool_exp R_PAREN
   63 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier        go to state 42
    number            go to state 43
    bool_exp          go to state 88
    relation_and_exp  go to state 58
    relation_exp      go to state 59
    expression        go to state 89
    mult_exp          go to state 45
    term              go to state 46
    var               go to state 47


State 57

   16 statement: IF bool_exp . THEN statement_loop ENDIF
   17          | IF bool_exp . THEN statement_loop ELSE statement_loop ENDIF

    THEN  shift, and go to state 90


State 58

   27 bool_exp: relation_and_exp .
   28         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 91

    $default  reduce using rule 27 (bool_exp)


State 59

   29 relation_and_exp: relation_exp .
   30                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 92

    $default  reduce using rule 29 (relation_and_exp)


State 60

   32 relation_exp: expression . comp expression

    EQ   shift, and go to state 93
    NEQ  shift, and go to state 94
    LT   shift, and go to state 95
    GT   shift, and go to state 96
    LTE  shift, and go to state 97
    GTE  shift, and go to state 98

    comp  go to state 99


State 61

   18 statement: WHILE bool_exp . BEGINLOOP statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 100


State 62

   67 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   68    | identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 101
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 63

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY .

    $default  reduce using rule 3 (function)


State 64

    9 statement_loop: statement_loop statement . SEMICOLON

    SEMICOLON  shift, and go to state 102


State 65

    8 statement_loop: statement SEMICOLON .

    $default  reduce using rule 8 (statement_loop)


State 66

   15 statement: var ASSIGN . expression

    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 103
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 67

   11 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 104


State 68

   12 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 25

    number  go to state 105


State 69

   62 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 106
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 70

   60 term: SUB number .

    $default  reduce using rule 60 (term)


State 71

   58 term: SUB var .

    $default  reduce using rule 58 (term)


State 72

   63 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 107


State 73

   57 term: identifier L_PAREN . exp_loop R_PAREN

    $default  reduce using rule 64 (exp_loop)

    exp_loop  go to state 108


State 74

   49 sub_mult_loop: SUB . expression

    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 109
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 75

   48 add_mult_loop: ADD . expression

    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 110
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 76

   46 expression: mult_exp add_mult_loop .

    $default  reduce using rule 46 (expression)


State 77

   47 expression: mult_exp sub_mult_loop .

    $default  reduce using rule 47 (expression)


State 78

   51 mult_exp: term mult_mult_loop .

    $default  reduce using rule 51 (mult_exp)


State 79

   52 mult_exp: term div_mult_loop .

    $default  reduce using rule 52 (mult_exp)


State 80

   53 mult_exp: term mod_mult_loop .

    $default  reduce using rule 53 (mult_exp)


State 81

   26 var_loop: var_loop var . COMMA

    COMMA  shift, and go to state 111


State 82

   20 statement: FOR var ASSIGN . number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    NUMBER  shift, and go to state 25

    number  go to state 112


State 83

    9 statement_loop: statement_loop . statement SEMICOLON
   19 statement: DO BEGINLOOP statement_loop . ENDLOOP WHILE bool_exp

    RETURN    shift, and go to state 27
    ENDLOOP   shift, and go to state 113
    CONTINUE  shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    IDENT     shift, and go to state 5

    identifier  go to state 35
    statement   go to state 64
    var         go to state 38


State 84

   33 relation_exp: NOT TRUE .

    $default  reduce using rule 33 (relation_exp)


State 85

   35 relation_exp: NOT FALSE .

    $default  reduce using rule 35 (relation_exp)


State 86

   37 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   63 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier        go to state 42
    number            go to state 43
    bool_exp          go to state 114
    relation_and_exp  go to state 58
    relation_exp      go to state 59
    expression        go to state 89
    mult_exp          go to state 45
    term              go to state 46
    var               go to state 47


State 87

   31 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 93
    NEQ  shift, and go to state 94
    LT   shift, and go to state 95
    GT   shift, and go to state 96
    LTE  shift, and go to state 97
    GTE  shift, and go to state 98

    comp  go to state 115


State 88

   38 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 116


State 89

   32 relation_exp: expression . comp expression
   63 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 93
    NEQ      shift, and go to state 94
    LT       shift, and go to state 95
    GT       shift, and go to state 96
    LTE      shift, and go to state 97
    GTE      shift, and go to state 98
    R_PAREN  shift, and go to state 107

    comp  go to state 99


State 90

   16 statement: IF bool_exp THEN . statement_loop ENDIF
   17          | IF bool_exp THEN . statement_loop ELSE statement_loop ENDIF

    RETURN    shift, and go to state 27
    CONTINUE  shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    IDENT     shift, and go to state 5

    identifier      go to state 35
    statement_loop  go to state 117
    statement       go to state 37
    var             go to state 38


State 91

   28 bool_exp: relation_and_exp OR . bool_exp

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier        go to state 42
    number            go to state 43
    bool_exp          go to state 118
    relation_and_exp  go to state 58
    relation_exp      go to state 59
    expression        go to state 60
    mult_exp          go to state 45
    term              go to state 46
    var               go to state 47


State 92

   30 relation_and_exp: relation_exp AND . relation_and_exp

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier        go to state 42
    number            go to state 43
    relation_and_exp  go to state 119
    relation_exp      go to state 59
    expression        go to state 60
    mult_exp          go to state 45
    term              go to state 46
    var               go to state 47


State 93

   39 comp: EQ .

    $default  reduce using rule 39 (comp)


State 94

   40 comp: NEQ .

    $default  reduce using rule 40 (comp)


State 95

   41 comp: LT .

    $default  reduce using rule 41 (comp)


State 96

   42 comp: GT .

    $default  reduce using rule 42 (comp)


State 97

   43 comp: LTE .

    $default  reduce using rule 43 (comp)


State 98

   44 comp: GTE .

    $default  reduce using rule 44 (comp)


State 99

   32 relation_exp: expression comp . expression

    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 120
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 100

   18 statement: WHILE bool_exp BEGINLOOP . statement_loop ENDLOOP

    RETURN    shift, and go to state 27
    CONTINUE  shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    IDENT     shift, and go to state 5

    identifier      go to state 35
    statement_loop  go to state 121
    statement       go to state 37
    var             go to state 38


State 101

   67 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   68    | identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 122


State 102

    9 statement_loop: statement_loop statement SEMICOLON .

    $default  reduce using rule 9 (statement_loop)


State 103

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 104

   11 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 105

   12 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 123


State 106

   62 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 124


State 107

   63 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 63 (term)


State 108

   57 term: identifier L_PAREN exp_loop . R_PAREN
   65 exp_loop: exp_loop . expression COMMA

    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 41
    R_PAREN  shift, and go to state 125
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 126
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 109

   49 sub_mult_loop: SUB expression .

    $default  reduce using rule 49 (sub_mult_loop)


State 110

   48 add_mult_loop: ADD expression .

    $default  reduce using rule 48 (add_mult_loop)


State 111

   26 var_loop: var_loop var COMMA .

    $default  reduce using rule 26 (var_loop)


State 112

   20 statement: FOR var ASSIGN number . SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    SEMICOLON  shift, and go to state 127


State 113

   19 statement: DO BEGINLOOP statement_loop ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 128


State 114

   37 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 129


State 115

   31 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 130
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 116

   38 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 38 (relation_exp)


State 117

    9 statement_loop: statement_loop . statement SEMICOLON
   16 statement: IF bool_exp THEN statement_loop . ENDIF
   17          | IF bool_exp THEN statement_loop . ELSE statement_loop ENDIF

    RETURN    shift, and go to state 27
    CONTINUE  shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    ENDIF     shift, and go to state 131
    ELSE      shift, and go to state 132
    WHILE     shift, and go to state 34
    IDENT     shift, and go to state 5

    identifier  go to state 35
    statement   go to state 64
    var         go to state 38


State 118

   28 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 28 (bool_exp)


State 119

   30 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 30 (relation_and_exp)


State 120

   32 relation_exp: expression comp expression .

    $default  reduce using rule 32 (relation_exp)


State 121

    9 statement_loop: statement_loop . statement SEMICOLON
   18 statement: WHILE bool_exp BEGINLOOP statement_loop . ENDLOOP

    RETURN    shift, and go to state 27
    ENDLOOP   shift, and go to state 133
    CONTINUE  shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    IDENT     shift, and go to state 5

    identifier  go to state 35
    statement   go to state 64
    var         go to state 38


State 122

   67 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   68    | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 134

    $default  reduce using rule 67 (var)


State 123

   12 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 135


State 124

   62 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 62 (term)


State 125

   57 term: identifier L_PAREN exp_loop R_PAREN .

    $default  reduce using rule 57 (term)


State 126

   65 exp_loop: exp_loop expression . COMMA

    COMMA  shift, and go to state 136


State 127

   20 statement: FOR var ASSIGN number SEMICOLON . bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier        go to state 42
    number            go to state 43
    bool_exp          go to state 137
    relation_and_exp  go to state 58
    relation_exp      go to state 59
    expression        go to state 60
    mult_exp          go to state 45
    term              go to state 46
    var               go to state 47


State 128

   19 statement: DO BEGINLOOP statement_loop ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier        go to state 42
    number            go to state 43
    bool_exp          go to state 138
    relation_and_exp  go to state 58
    relation_exp      go to state 59
    expression        go to state 60
    mult_exp          go to state 45
    term              go to state 46
    var               go to state 47


State 129

   37 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 37 (relation_exp)


State 130

   31 relation_exp: NOT expression comp expression .

    $default  reduce using rule 31 (relation_exp)


State 131

   16 statement: IF bool_exp THEN statement_loop ENDIF .

    $default  reduce using rule 16 (statement)


State 132

   17 statement: IF bool_exp THEN statement_loop ELSE . statement_loop ENDIF

    RETURN    shift, and go to state 27
    CONTINUE  shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    IDENT     shift, and go to state 5

    identifier      go to state 35
    statement_loop  go to state 139
    statement       go to state 37
    var             go to state 38


State 133

   18 statement: WHILE bool_exp BEGINLOOP statement_loop ENDLOOP .

    $default  reduce using rule 18 (statement)


State 134

   68 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 140
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 135

   12 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 141


State 136

   65 exp_loop: exp_loop expression COMMA .

    $default  reduce using rule 65 (exp_loop)


State 137

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp . SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    SEMICOLON  shift, and go to state 142


State 138

   19 statement: DO BEGINLOOP statement_loop ENDLOOP WHILE bool_exp .

    $default  reduce using rule 19 (statement)


State 139

    9 statement_loop: statement_loop . statement SEMICOLON
   17 statement: IF bool_exp THEN statement_loop ELSE statement_loop . ENDIF

    RETURN    shift, and go to state 27
    CONTINUE  shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    ENDIF     shift, and go to state 143
    WHILE     shift, and go to state 34
    IDENT     shift, and go to state 5

    identifier  go to state 35
    statement   go to state 64
    var         go to state 38


State 140

   68 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 144


State 141

   12 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 142

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON . var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    IDENT  shift, and go to state 5

    identifier  go to state 35
    var         go to state 145


State 143

   17 statement: IF bool_exp THEN statement_loop ELSE statement_loop ENDIF .

    $default  reduce using rule 17 (statement)


State 144

   68 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 68 (var)


State 145

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var . ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    ASSIGN  shift, and go to state 146


State 146

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN . expression BEGINLOOP statement_loop ENDLOOP

    SUB      shift, and go to state 40
    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 25
    IDENT    shift, and go to state 5

    identifier  go to state 42
    number      go to state 43
    expression  go to state 147
    mult_exp    go to state 45
    term        go to state 46
    var         go to state 47


State 147

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression . BEGINLOOP statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 148


State 148

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP . statement_loop ENDLOOP

    RETURN    shift, and go to state 27
    CONTINUE  shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    IDENT     shift, and go to state 5

    identifier      go to state 35
    statement_loop  go to state 149
    statement       go to state 37
    var             go to state 38


State 149

    9 statement_loop: statement_loop . statement SEMICOLON
   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statement_loop . ENDLOOP

    RETURN    shift, and go to state 27
    ENDLOOP   shift, and go to state 150
    CONTINUE  shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    IDENT     shift, and go to state 5

    identifier  go to state 35
    statement   go to state 64
    var         go to state 38


State 150

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP .

    $default  reduce using rule 20 (statement)
