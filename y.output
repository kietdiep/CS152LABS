Terminals unused in grammar

   IDENTIFIER
   EXIT
   UMINUS


State 55 conflicts: 1 shift/reduce
State 93 conflicts: 4 shift/reduce
State 116 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: %empty
    2        | Function Program

    3 Function: FUNCTION function_identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    4 declaration: identifier_loop COLON INTEGER
    5            | identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
    6            | identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    7 declaration_loop: %empty
    8                 | declaration_loop declaration SEMICOLON

    9 identifier_loop: identifier
   10                | identifier_loop identifier COMMA

   11 statement_loop: statement_loop statement SEMICOLON
   12               | statement SEMICOLON

   13 statement: var ASSIGN expression
   14          | IF bool_exp THEN statement_loop else_statement ENDIF
   15          | WHILE bool_exp BEGINLOOP statement_loop ENDLOOP
   16          | DO BEGINLOOP statement_loop ENDLOOP WHILE bool_exp
   17          | FOR identifier_variable IN identifier BEGINLOOP statement_loop ENDLOOP
   18          | READ var_loop
   19          | WRITE var_loop
   20          | CONTINUE
   21          | RETURN expression

   22 else_statement: %empty
   23               | ELSE statement_loop

   24 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   25    | identifier

   26 var_loop: var
   27         | var_loop var COMMA

   28 expression: mult_exp
   29           | expression ADD mult_exp
   30           | expression SUB mult_exp

   31 exp_loop: %empty
   32         | exp_loop expression COMMA
   33         | expression

   34 mult_exp: term
   35         | mult_exp MULT term
   36         | mult_exp DIV term
   37         | mult_exp MOD term

   38 term: var
   39     | SUB var
   40     | number
   41     | SUB number
   42     | L_PAREN expression R_PAREN
   43     | SUB L_PAREN expression R_PAREN
   44     | identifier L_PAREN exp_loop R_PAREN

   45 bool_exp: relation_and_exp
   46         | relation_and_exp OR bool_exp

   47 relation_and_exp: relation_exp
   48                 | relation_exp AND relation_and_exp

   49 relation_exp: NOT relation_exp_not
   50             | relation_exp_not

   51 relation_exp_not: expression comp expression
   52                 | TRUE
   53                 | FALSE
   54                 | L_PAREN bool_exp R_PAREN

   55 comp: EQ
   56     | NEQ
   57     | LT
   58     | GT
   59     | LTE
   60     | GTE

   61 identifier: IDENT

   62 identifier_variable: IDENT

   63 function_identifier: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 61 62 63
number (259) 5 6 40 41
FUNCTION (260) 3
IDENTIFIER (261)
BEGIN_PARAMS (262) 3
END_PARAMS (263) 3
BEGIN_LOCALS (264) 3
END_LOCALS (265) 3
BEGIN_BODY (266) 3
END_BODY (267) 3
INTEGER (268) 4 5 6
ARRAY (269) 5 6
OF (270) 5 6
IF (271) 14
THEN (272) 14
ENDIF (273) 14
ELSE (274) 23
WHILE (275) 15 16
DO (276) 16
FOR (277) 17
IN (278) 17
BEGINLOOP (279) 15 16 17
ENDLOOP (280) 15 16 17
CONTINUE (281) 20
READ (282) 18
WRITE (283) 19
EXIT (284)
COMMA (285) 10 27 32
COLON (286) 4 5 6
SEMICOLON (287) 3 8 11 12
TRUE (288) 52
FALSE (289) 53
RETURN (290) 21
ASSIGN (291) 13
OR (292) 46
AND (293) 48
NOT (294) 49
LT (295) 57
LTE (296) 59
GT (297) 58
GTE (298) 60
EQ (299) 55
NEQ (300) 56
ADD (301) 29
SUB (302) 30 39 41 43
MULT (303) 35
DIV (304) 36
MOD (305) 37
UMINUS (306)
L_SQUARE_BRACKET (307) 5 6 24
R_SQUARE_BRACKET (308) 5 6 24
L_PAREN (309) 42 43 44 54
R_PAREN (310) 42 43 44 54


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
Program (57)
    on left: 1 2, on right: 0 2
Function (58)
    on left: 3, on right: 2
declaration (59)
    on left: 4 5 6, on right: 8
declaration_loop (60)
    on left: 7 8, on right: 3 8
identifier_loop (61)
    on left: 9 10, on right: 4 5 6 10
statement_loop (62)
    on left: 11 12, on right: 3 11 14 15 16 17 23
statement (63)
    on left: 13 14 15 16 17 18 19 20 21, on right: 11 12
else_statement (64)
    on left: 22 23, on right: 14
var (65)
    on left: 24 25, on right: 13 26 27 38 39
var_loop (66)
    on left: 26 27, on right: 18 19 27
expression (67)
    on left: 28 29 30, on right: 13 21 24 29 30 32 33 42 43 51
exp_loop (68)
    on left: 31 32 33, on right: 32 44
mult_exp (69)
    on left: 34 35 36 37, on right: 28 29 30 35 36 37
term (70)
    on left: 38 39 40 41 42 43 44, on right: 34 35 36 37
bool_exp (71)
    on left: 45 46, on right: 14 15 16 46 54
relation_and_exp (72)
    on left: 47 48, on right: 45 46 48
relation_exp (73)
    on left: 49 50, on right: 47 48
relation_exp_not (74)
    on left: 51 52 53 54, on right: 49 50
comp (75)
    on left: 55 56 57 58 59 60, on right: 51
identifier (76)
    on left: 61, on right: 9 10 17 24 25 44
identifier_variable (77)
    on left: 62, on right: 17
function_identifier (78)
    on left: 63, on right: 3


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 2
    Function  go to state 3


State 1

    3 Function: FUNCTION . function_identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    IDENT  shift, and go to state 4

    function_identifier  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    2 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 7
    Function  go to state 3


State 4

   63 function_identifier: IDENT .

    $default  reduce using rule 63 (function_identifier)


State 5

    3 Function: FUNCTION function_identifier . SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    2 Program: Function Program .

    $default  reduce using rule 2 (Program)


State 8

    3 Function: FUNCTION function_identifier SEMICOLON . BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    3 Function: FUNCTION function_identifier SEMICOLON BEGIN_PARAMS . declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    $default  reduce using rule 7 (declaration_loop)

    declaration_loop  go to state 10


State 10

    3 Function: FUNCTION function_identifier SEMICOLON BEGIN_PARAMS declaration_loop . END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY
    8 declaration_loop: declaration_loop . declaration SEMICOLON

    IDENT       shift, and go to state 11
    END_PARAMS  shift, and go to state 12

    declaration      go to state 13
    identifier_loop  go to state 14
    identifier       go to state 15


State 11

   61 identifier: IDENT .

    $default  reduce using rule 61 (identifier)


State 12

    3 Function: FUNCTION function_identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS . BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    BEGIN_LOCALS  shift, and go to state 16


State 13

    8 declaration_loop: declaration_loop declaration . SEMICOLON

    SEMICOLON  shift, and go to state 17


State 14

    4 declaration: identifier_loop . COLON INTEGER
    5            | identifier_loop . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
    6            | identifier_loop . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   10 identifier_loop: identifier_loop . identifier COMMA

    IDENT  shift, and go to state 11
    COLON  shift, and go to state 18

    identifier  go to state 19


State 15

    9 identifier_loop: identifier .

    $default  reduce using rule 9 (identifier_loop)


State 16

    3 Function: FUNCTION function_identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS . declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    $default  reduce using rule 7 (declaration_loop)

    declaration_loop  go to state 20


State 17

    8 declaration_loop: declaration_loop declaration SEMICOLON .

    $default  reduce using rule 8 (declaration_loop)


State 18

    4 declaration: identifier_loop COLON . INTEGER
    5            | identifier_loop COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
    6            | identifier_loop COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 19

   10 identifier_loop: identifier_loop identifier . COMMA

    COMMA  shift, and go to state 23


State 20

    3 Function: FUNCTION function_identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop . END_LOCALS BEGIN_BODY statement_loop END_BODY
    8 declaration_loop: declaration_loop . declaration SEMICOLON

    IDENT       shift, and go to state 11
    END_LOCALS  shift, and go to state 24

    declaration      go to state 13
    identifier_loop  go to state 14
    identifier       go to state 15


State 21

    4 declaration: identifier_loop COLON INTEGER .

    $default  reduce using rule 4 (declaration)


State 22

    5 declaration: identifier_loop COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
    6            | identifier_loop COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

   10 identifier_loop: identifier_loop identifier COMMA .

    $default  reduce using rule 10 (identifier_loop)


State 24

    3 Function: FUNCTION function_identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS . BEGIN_BODY statement_loop END_BODY

    BEGIN_BODY  shift, and go to state 26


State 25

    5 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER
    6            | identifier_loop COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    number  shift, and go to state 27


State 26

    3 Function: FUNCTION function_identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY . statement_loop END_BODY

    IDENT     shift, and go to state 11
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35

    statement_loop  go to state 36
    statement       go to state 37
    var             go to state 38
    identifier      go to state 39


State 27

    5 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER
    6            | identifier_loop COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 40


State 28

   14 statement: IF . bool_exp THEN statement_loop else_statement ENDIF

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var               go to state 47
    expression        go to state 48
    mult_exp          go to state 49
    term              go to state 50
    bool_exp          go to state 51
    relation_and_exp  go to state 52
    relation_exp      go to state 53
    relation_exp_not  go to state 54
    identifier        go to state 55


State 29

   15 statement: WHILE . bool_exp BEGINLOOP statement_loop ENDLOOP

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var               go to state 47
    expression        go to state 48
    mult_exp          go to state 49
    term              go to state 50
    bool_exp          go to state 56
    relation_and_exp  go to state 52
    relation_exp      go to state 53
    relation_exp_not  go to state 54
    identifier        go to state 55


State 30

   16 statement: DO . BEGINLOOP statement_loop ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 57


State 31

   17 statement: FOR . identifier_variable IN identifier BEGINLOOP statement_loop ENDLOOP

    IDENT  shift, and go to state 58

    identifier_variable  go to state 59


State 32

   20 statement: CONTINUE .

    $default  reduce using rule 20 (statement)


State 33

   18 statement: READ . var_loop

    IDENT  shift, and go to state 11

    var         go to state 60
    var_loop    go to state 61
    identifier  go to state 39


State 34

   19 statement: WRITE . var_loop

    IDENT  shift, and go to state 11

    var         go to state 60
    var_loop    go to state 62
    identifier  go to state 39


State 35

   21 statement: RETURN . expression

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63

    var         go to state 47
    expression  go to state 64
    mult_exp    go to state 49
    term        go to state 50
    identifier  go to state 55


State 36

    3 Function: FUNCTION function_identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop . END_BODY
   11 statement_loop: statement_loop . statement SEMICOLON

    IDENT     shift, and go to state 11
    END_BODY  shift, and go to state 65
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35

    statement   go to state 66
    var         go to state 38
    identifier  go to state 39


State 37

   12 statement_loop: statement . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 38

   13 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 68


State 39

   24 var: identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   25    | identifier .

    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 25 (var)


State 40

    5 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER
    6            | identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 70
    L_SQUARE_BRACKET  shift, and go to state 71


State 41

   40 term: number .

    $default  reduce using rule 40 (term)


State 42

   52 relation_exp_not: TRUE .

    $default  reduce using rule 52 (relation_exp_not)


State 43

   53 relation_exp_not: FALSE .

    $default  reduce using rule 53 (relation_exp_not)


State 44

   49 relation_exp: NOT . relation_exp_not

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var               go to state 47
    expression        go to state 48
    mult_exp          go to state 49
    term              go to state 50
    relation_exp_not  go to state 72
    identifier        go to state 55


State 45

   39 term: SUB . var
   41     | SUB . number
   43     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 11
    number   shift, and go to state 73
    L_PAREN  shift, and go to state 74

    var         go to state 75
    identifier  go to state 39


State 46

   42 term: L_PAREN . expression R_PAREN
   54 relation_exp_not: L_PAREN . bool_exp R_PAREN

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var               go to state 47
    expression        go to state 76
    mult_exp          go to state 49
    term              go to state 50
    bool_exp          go to state 77
    relation_and_exp  go to state 52
    relation_exp      go to state 53
    relation_exp_not  go to state 54
    identifier        go to state 55


State 47

   38 term: var .

    $default  reduce using rule 38 (term)


State 48

   29 expression: expression . ADD mult_exp
   30           | expression . SUB mult_exp
   51 relation_exp_not: expression . comp expression

    LT   shift, and go to state 78
    LTE  shift, and go to state 79
    GT   shift, and go to state 80
    GTE  shift, and go to state 81
    EQ   shift, and go to state 82
    NEQ  shift, and go to state 83
    ADD  shift, and go to state 84
    SUB  shift, and go to state 85

    comp  go to state 86


State 49

   28 expression: mult_exp .
   35 mult_exp: mult_exp . MULT term
   36         | mult_exp . DIV term
   37         | mult_exp . MOD term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 28 (expression)


State 50

   34 mult_exp: term .

    $default  reduce using rule 34 (mult_exp)


State 51

   14 statement: IF bool_exp . THEN statement_loop else_statement ENDIF

    THEN  shift, and go to state 90


State 52

   45 bool_exp: relation_and_exp .
   46         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 91

    $default  reduce using rule 45 (bool_exp)


State 53

   47 relation_and_exp: relation_exp .
   48                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 92

    $default  reduce using rule 47 (relation_and_exp)


State 54

   50 relation_exp: relation_exp_not .

    $default  reduce using rule 50 (relation_exp)


State 55

   24 var: identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   25    | identifier .
   44 term: identifier . L_PAREN exp_loop R_PAREN

    L_SQUARE_BRACKET  shift, and go to state 69
    L_PAREN           shift, and go to state 93

    L_PAREN   [reduce using rule 25 (var)]
    $default  reduce using rule 25 (var)


State 56

   15 statement: WHILE bool_exp . BEGINLOOP statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 94


State 57

   16 statement: DO BEGINLOOP . statement_loop ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 11
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35

    statement_loop  go to state 95
    statement       go to state 37
    var             go to state 38
    identifier      go to state 39


State 58

   62 identifier_variable: IDENT .

    $default  reduce using rule 62 (identifier_variable)


State 59

   17 statement: FOR identifier_variable . IN identifier BEGINLOOP statement_loop ENDLOOP

    IN  shift, and go to state 96


State 60

   26 var_loop: var .

    $default  reduce using rule 26 (var_loop)


State 61

   18 statement: READ var_loop .
   27 var_loop: var_loop . var COMMA

    IDENT  shift, and go to state 11

    $default  reduce using rule 18 (statement)

    var         go to state 97
    identifier  go to state 39


State 62

   19 statement: WRITE var_loop .
   27 var_loop: var_loop . var COMMA

    IDENT  shift, and go to state 11

    $default  reduce using rule 19 (statement)

    var         go to state 97
    identifier  go to state 39


State 63

   42 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63

    var         go to state 47
    expression  go to state 98
    mult_exp    go to state 49
    term        go to state 50
    identifier  go to state 55


State 64

   21 statement: RETURN expression .
   29 expression: expression . ADD mult_exp
   30           | expression . SUB mult_exp

    ADD  shift, and go to state 84
    SUB  shift, and go to state 85

    $default  reduce using rule 21 (statement)


State 65

    3 Function: FUNCTION function_identifier SEMICOLON BEGIN_PARAMS declaration_loop END_PARAMS BEGIN_LOCALS declaration_loop END_LOCALS BEGIN_BODY statement_loop END_BODY .

    $default  reduce using rule 3 (Function)


State 66

   11 statement_loop: statement_loop statement . SEMICOLON

    SEMICOLON  shift, and go to state 99


State 67

   12 statement_loop: statement SEMICOLON .

    $default  reduce using rule 12 (statement_loop)


State 68

   13 statement: var ASSIGN . expression

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63

    var         go to state 47
    expression  go to state 100
    mult_exp    go to state 49
    term        go to state 50
    identifier  go to state 55


State 69

   24 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63

    var         go to state 47
    expression  go to state 101
    mult_exp    go to state 49
    term        go to state 50
    identifier  go to state 55


State 70

    5 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 102


State 71

    6 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    number  shift, and go to state 103


State 72

   49 relation_exp: NOT relation_exp_not .

    $default  reduce using rule 49 (relation_exp)


State 73

   41 term: SUB number .

    $default  reduce using rule 41 (term)


State 74

   43 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63

    var         go to state 47
    expression  go to state 104
    mult_exp    go to state 49
    term        go to state 50
    identifier  go to state 55


State 75

   39 term: SUB var .

    $default  reduce using rule 39 (term)


State 76

   29 expression: expression . ADD mult_exp
   30           | expression . SUB mult_exp
   42 term: L_PAREN expression . R_PAREN
   51 relation_exp_not: expression . comp expression

    LT       shift, and go to state 78
    LTE      shift, and go to state 79
    GT       shift, and go to state 80
    GTE      shift, and go to state 81
    EQ       shift, and go to state 82
    NEQ      shift, and go to state 83
    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    R_PAREN  shift, and go to state 105

    comp  go to state 86


State 77

   54 relation_exp_not: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 106


State 78

   57 comp: LT .

    $default  reduce using rule 57 (comp)


State 79

   59 comp: LTE .

    $default  reduce using rule 59 (comp)


State 80

   58 comp: GT .

    $default  reduce using rule 58 (comp)


State 81

   60 comp: GTE .

    $default  reduce using rule 60 (comp)


State 82

   55 comp: EQ .

    $default  reduce using rule 55 (comp)


State 83

   56 comp: NEQ .

    $default  reduce using rule 56 (comp)


State 84

   29 expression: expression ADD . mult_exp

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63

    var         go to state 47
    mult_exp    go to state 107
    term        go to state 50
    identifier  go to state 55


State 85

   30 expression: expression SUB . mult_exp

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63

    var         go to state 47
    mult_exp    go to state 108
    term        go to state 50
    identifier  go to state 55


State 86

   51 relation_exp_not: expression comp . expression

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63

    var         go to state 47
    expression  go to state 109
    mult_exp    go to state 49
    term        go to state 50
    identifier  go to state 55


State 87

   35 mult_exp: mult_exp MULT . term

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63

    var         go to state 47
    term        go to state 110
    identifier  go to state 55


State 88

   36 mult_exp: mult_exp DIV . term

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63

    var         go to state 47
    term        go to state 111
    identifier  go to state 55


State 89

   37 mult_exp: mult_exp MOD . term

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63

    var         go to state 47
    term        go to state 112
    identifier  go to state 55


State 90

   14 statement: IF bool_exp THEN . statement_loop else_statement ENDIF

    IDENT     shift, and go to state 11
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35

    statement_loop  go to state 113
    statement       go to state 37
    var             go to state 38
    identifier      go to state 39


State 91

   46 bool_exp: relation_and_exp OR . bool_exp

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var               go to state 47
    expression        go to state 48
    mult_exp          go to state 49
    term              go to state 50
    bool_exp          go to state 114
    relation_and_exp  go to state 52
    relation_exp      go to state 53
    relation_exp_not  go to state 54
    identifier        go to state 55


State 92

   48 relation_and_exp: relation_exp AND . relation_and_exp

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var               go to state 47
    expression        go to state 48
    mult_exp          go to state 49
    term              go to state 50
    relation_and_exp  go to state 115
    relation_exp      go to state 53
    relation_exp_not  go to state 54
    identifier        go to state 55


State 93

   44 term: identifier L_PAREN . exp_loop R_PAREN

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63

    IDENT     [reduce using rule 31 (exp_loop)]
    number    [reduce using rule 31 (exp_loop)]
    SUB       [reduce using rule 31 (exp_loop)]
    L_PAREN   [reduce using rule 31 (exp_loop)]
    $default  reduce using rule 31 (exp_loop)

    var         go to state 47
    expression  go to state 116
    exp_loop    go to state 117
    mult_exp    go to state 49
    term        go to state 50
    identifier  go to state 55


State 94

   15 statement: WHILE bool_exp BEGINLOOP . statement_loop ENDLOOP

    IDENT     shift, and go to state 11
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35

    statement_loop  go to state 118
    statement       go to state 37
    var             go to state 38
    identifier      go to state 39


State 95

   11 statement_loop: statement_loop . statement SEMICOLON
   16 statement: DO BEGINLOOP statement_loop . ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 11
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    ENDLOOP   shift, and go to state 119
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35

    statement   go to state 66
    var         go to state 38
    identifier  go to state 39


State 96

   17 statement: FOR identifier_variable IN . identifier BEGINLOOP statement_loop ENDLOOP

    IDENT  shift, and go to state 11

    identifier  go to state 120


State 97

   27 var_loop: var_loop var . COMMA

    COMMA  shift, and go to state 121


State 98

   29 expression: expression . ADD mult_exp
   30           | expression . SUB mult_exp
   42 term: L_PAREN expression . R_PAREN

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    R_PAREN  shift, and go to state 105


State 99

   11 statement_loop: statement_loop statement SEMICOLON .

    $default  reduce using rule 11 (statement_loop)


State 100

   13 statement: var ASSIGN expression .
   29 expression: expression . ADD mult_exp
   30           | expression . SUB mult_exp

    ADD  shift, and go to state 84
    SUB  shift, and go to state 85

    $default  reduce using rule 13 (statement)


State 101

   24 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   29 expression: expression . ADD mult_exp
   30           | expression . SUB mult_exp

    ADD               shift, and go to state 84
    SUB               shift, and go to state 85
    R_SQUARE_BRACKET  shift, and go to state 122


State 102

    5 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 5 (declaration)


State 103

    6 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 123


State 104

   29 expression: expression . ADD mult_exp
   30           | expression . SUB mult_exp
   43 term: SUB L_PAREN expression . R_PAREN

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    R_PAREN  shift, and go to state 124


State 105

   42 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 42 (term)


State 106

   54 relation_exp_not: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 54 (relation_exp_not)


State 107

   29 expression: expression ADD mult_exp .
   35 mult_exp: mult_exp . MULT term
   36         | mult_exp . DIV term
   37         | mult_exp . MOD term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 29 (expression)


State 108

   30 expression: expression SUB mult_exp .
   35 mult_exp: mult_exp . MULT term
   36         | mult_exp . DIV term
   37         | mult_exp . MOD term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 30 (expression)


State 109

   29 expression: expression . ADD mult_exp
   30           | expression . SUB mult_exp
   51 relation_exp_not: expression comp expression .

    ADD  shift, and go to state 84
    SUB  shift, and go to state 85

    $default  reduce using rule 51 (relation_exp_not)


State 110

   35 mult_exp: mult_exp MULT term .

    $default  reduce using rule 35 (mult_exp)


State 111

   36 mult_exp: mult_exp DIV term .

    $default  reduce using rule 36 (mult_exp)


State 112

   37 mult_exp: mult_exp MOD term .

    $default  reduce using rule 37 (mult_exp)


State 113

   11 statement_loop: statement_loop . statement SEMICOLON
   14 statement: IF bool_exp THEN statement_loop . else_statement ENDIF

    IDENT     shift, and go to state 11
    IF        shift, and go to state 28
    ELSE      shift, and go to state 125
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35

    $default  reduce using rule 22 (else_statement)

    statement       go to state 66
    else_statement  go to state 126
    var             go to state 38
    identifier      go to state 39


State 114

   46 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 46 (bool_exp)


State 115

   48 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 48 (relation_and_exp)


State 116

   29 expression: expression . ADD mult_exp
   30           | expression . SUB mult_exp
   33 exp_loop: expression .

    ADD  shift, and go to state 84
    SUB  shift, and go to state 85

    SUB       [reduce using rule 33 (exp_loop)]
    $default  reduce using rule 33 (exp_loop)


State 117

   32 exp_loop: exp_loop . expression COMMA
   44 term: identifier L_PAREN exp_loop . R_PAREN

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 63
    R_PAREN  shift, and go to state 127

    var         go to state 47
    expression  go to state 128
    mult_exp    go to state 49
    term        go to state 50
    identifier  go to state 55


State 118

   11 statement_loop: statement_loop . statement SEMICOLON
   15 statement: WHILE bool_exp BEGINLOOP statement_loop . ENDLOOP

    IDENT     shift, and go to state 11
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    ENDLOOP   shift, and go to state 129
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35

    statement   go to state 66
    var         go to state 38
    identifier  go to state 39


State 119

   16 statement: DO BEGINLOOP statement_loop ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 130


State 120

   17 statement: FOR identifier_variable IN identifier . BEGINLOOP statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 131


State 121

   27 var_loop: var_loop var COMMA .

    $default  reduce using rule 27 (var_loop)


State 122

   24 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 24 (var)


State 123

    6 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 132


State 124

   43 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 43 (term)


State 125

   23 else_statement: ELSE . statement_loop

    IDENT     shift, and go to state 11
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35

    statement_loop  go to state 133
    statement       go to state 37
    var             go to state 38
    identifier      go to state 39


State 126

   14 statement: IF bool_exp THEN statement_loop else_statement . ENDIF

    ENDIF  shift, and go to state 134


State 127

   44 term: identifier L_PAREN exp_loop R_PAREN .

    $default  reduce using rule 44 (term)


State 128

   29 expression: expression . ADD mult_exp
   30           | expression . SUB mult_exp
   32 exp_loop: exp_loop expression . COMMA

    COMMA  shift, and go to state 135
    ADD    shift, and go to state 84
    SUB    shift, and go to state 85


State 129

   15 statement: WHILE bool_exp BEGINLOOP statement_loop ENDLOOP .

    $default  reduce using rule 15 (statement)


State 130

   16 statement: DO BEGINLOOP statement_loop ENDLOOP WHILE . bool_exp

    IDENT    shift, and go to state 11
    number   shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var               go to state 47
    expression        go to state 48
    mult_exp          go to state 49
    term              go to state 50
    bool_exp          go to state 136
    relation_and_exp  go to state 52
    relation_exp      go to state 53
    relation_exp_not  go to state 54
    identifier        go to state 55


State 131

   17 statement: FOR identifier_variable IN identifier BEGINLOOP . statement_loop ENDLOOP

    IDENT     shift, and go to state 11
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35

    statement_loop  go to state 137
    statement       go to state 37
    var             go to state 38
    identifier      go to state 39


State 132

    6 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 138


State 133

   11 statement_loop: statement_loop . statement SEMICOLON
   23 else_statement: ELSE statement_loop .

    IDENT     shift, and go to state 11
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35

    $default  reduce using rule 23 (else_statement)

    statement   go to state 66
    var         go to state 38
    identifier  go to state 39


State 134

   14 statement: IF bool_exp THEN statement_loop else_statement ENDIF .

    $default  reduce using rule 14 (statement)


State 135

   32 exp_loop: exp_loop expression COMMA .

    $default  reduce using rule 32 (exp_loop)


State 136

   16 statement: DO BEGINLOOP statement_loop ENDLOOP WHILE bool_exp .

    $default  reduce using rule 16 (statement)


State 137

   11 statement_loop: statement_loop . statement SEMICOLON
   17 statement: FOR identifier_variable IN identifier BEGINLOOP statement_loop . ENDLOOP

    IDENT     shift, and go to state 11
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    ENDLOOP   shift, and go to state 139
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35

    statement   go to state 66
    var         go to state 38
    identifier  go to state 39


State 138

    6 declaration: identifier_loop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 6 (declaration)


State 139

   17 statement: FOR identifier_variable IN identifier BEGINLOOP statement_loop ENDLOOP .

    $default  reduce using rule 17 (statement)
